// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     cpp_templates/function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>

namespace sym {

/**
 * This function was autogenerated. Do not modify by hand.
 *
 * Args:
 *     states: Matrix17_1
 *     states_cov: Matrix15_15
 *     gyro_body: Matrix31
 *     dt: Scalar
 *     gyro_noise: Matrix31
 *     accel_bias_noise: Matrix31
 *     gyro_bias_noise: Matrix31
 *     mag_bias_noise: Matrix31
 *
 * Outputs:
 *     next_states: Matrix17_1
 *     next_states_cov: Matrix15_15
 */
template <typename Scalar>
void AhrsProcess(const Eigen::Matrix<Scalar, 17, 1>& states,
                 const Eigen::Matrix<Scalar, 15, 15>& states_cov,
                 const Eigen::Matrix<Scalar, 3, 1>& gyro_body, const Scalar& dt,
                 const Eigen::Matrix<Scalar, 3, 1>& gyro_noise,
                 const Eigen::Matrix<Scalar, 3, 1>& accel_bias_noise,
                 const Eigen::Matrix<Scalar, 3, 1>& gyro_bias_noise,
                 const Eigen::Matrix<Scalar, 3, 1>& mag_bias_noise,
                 Eigen::Matrix<Scalar, 17, 1>* const next_states = nullptr,
                 Eigen::Matrix<Scalar, 15, 15>* const next_states_cov = nullptr) {
  // Total ops: 1713

  // Input arrays

  // Intermediate terms (248)
  const Scalar _tmp0 = std::pow(dt, Scalar(2));
  const Scalar _tmp1 = gyro_body(0, 0) - states(7, 0);
  const Scalar _tmp2 = std::pow(_tmp1, Scalar(2));
  const Scalar _tmp3 = gyro_body(2, 0) - states(9, 0);
  const Scalar _tmp4 = std::pow(_tmp3, Scalar(2));
  const Scalar _tmp5 = gyro_body(1, 0) - states(8, 0);
  const Scalar _tmp6 = std::pow(_tmp5, Scalar(2));
  const Scalar _tmp7 =
      _tmp0 * _tmp2 + _tmp0 * _tmp4 + _tmp0 * _tmp6 + Scalar(9.9999999999999998e-17);
  const Scalar _tmp8 = std::sqrt(_tmp7);
  const Scalar _tmp9 = (Scalar(1) / Scalar(2)) * _tmp8;
  const Scalar _tmp10 = std::cos(_tmp9);
  const Scalar _tmp11 = _tmp10 * states(0, 0);
  const Scalar _tmp12 = std::sin(_tmp9);
  const Scalar _tmp13 = Scalar(1.0) / (_tmp8);
  const Scalar _tmp14 = _tmp13 * dt;
  const Scalar _tmp15 = _tmp12 * _tmp14;
  const Scalar _tmp16 = _tmp15 * states(1, 0);
  const Scalar _tmp17 = _tmp16 * _tmp3;
  const Scalar _tmp18 = _tmp15 * states(2, 0);
  const Scalar _tmp19 = _tmp18 * _tmp5;
  const Scalar _tmp20 = _tmp12 * states(3, 0);
  const Scalar _tmp21 = _tmp14 * _tmp20;
  const Scalar _tmp22 = _tmp1 * _tmp21;
  const Scalar _tmp23 = _tmp11 + _tmp17 - _tmp19 + _tmp22;
  const Scalar _tmp24 = _tmp10 * states(1, 0);
  const Scalar _tmp25 = _tmp1 * _tmp18;
  const Scalar _tmp26 = _tmp15 * states(0, 0);
  const Scalar _tmp27 = _tmp26 * _tmp3;
  const Scalar _tmp28 = _tmp21 * _tmp5;
  const Scalar _tmp29 = _tmp24 + _tmp25 - _tmp27 + _tmp28;
  const Scalar _tmp30 = _tmp10 * states(2, 0);
  const Scalar _tmp31 = _tmp1 * _tmp16;
  const Scalar _tmp32 = _tmp26 * _tmp5;
  const Scalar _tmp33 = _tmp21 * _tmp3;
  const Scalar _tmp34 = _tmp30 - _tmp31 + _tmp32 + _tmp33;
  const Scalar _tmp35 = _tmp16 * _tmp5;
  const Scalar _tmp36 = _tmp18 * _tmp3;
  const Scalar _tmp37 = _tmp1 * _tmp26;
  const Scalar _tmp38 = _tmp10 * states(3, 0);
  const Scalar _tmp39 = -_tmp35 - _tmp36 - _tmp37 + _tmp38;
  const Scalar _tmp40 = (Scalar(1) / Scalar(2)) * _tmp11;
  const Scalar _tmp41 = [&]() {
    const Scalar base = dt;
    return base * base * base;
  }();
  const Scalar _tmp42 = _tmp41 / _tmp7;
  const Scalar _tmp43 = _tmp40 * _tmp42;
  const Scalar _tmp44 = _tmp12 * states(0, 0);
  const Scalar _tmp45 = _tmp41 / (_tmp7 * std::sqrt(_tmp7));
  const Scalar _tmp46 = _tmp45 * _tmp6;
  const Scalar _tmp47 = _tmp12 * states(2, 0);
  const Scalar _tmp48 = (Scalar(1) / Scalar(2)) * _tmp0 * _tmp13;
  const Scalar _tmp49 = _tmp47 * _tmp48;
  const Scalar _tmp50 = _tmp20 * _tmp3;
  const Scalar _tmp51 = _tmp45 * _tmp5;
  const Scalar _tmp52 = (Scalar(1) / Scalar(2)) * _tmp38;
  const Scalar _tmp53 = _tmp42 * _tmp52;
  const Scalar _tmp54 = _tmp3 * _tmp53;
  const Scalar _tmp55 = -_tmp5 * _tmp54 + _tmp50 * _tmp51;
  const Scalar _tmp56 = _tmp12 * states(1, 0);
  const Scalar _tmp57 = _tmp1 * _tmp45;
  const Scalar _tmp58 = _tmp5 * _tmp57;
  const Scalar _tmp59 = (Scalar(1) / Scalar(2)) * _tmp24;
  const Scalar _tmp60 = _tmp42 * _tmp59;
  const Scalar _tmp61 = _tmp1 * _tmp5;
  const Scalar _tmp62 = -_tmp56 * _tmp58 + _tmp60 * _tmp61;
  const Scalar _tmp63 =
      -_tmp26 - _tmp43 * _tmp6 + _tmp44 * _tmp46 + _tmp49 * _tmp5 + _tmp55 + _tmp62;
  const Scalar _tmp64 = 2 * _tmp29;
  const Scalar _tmp65 = _tmp3 * _tmp56;
  const Scalar _tmp66 = _tmp51 * _tmp65;
  const Scalar _tmp67 = _tmp3 * _tmp5;
  const Scalar _tmp68 = _tmp60 * _tmp67;
  const Scalar _tmp69 = _tmp44 * _tmp48;
  const Scalar _tmp70 = (Scalar(1) / Scalar(2)) * _tmp30;
  const Scalar _tmp71 = _tmp42 * _tmp70;
  const Scalar _tmp72 = _tmp20 * _tmp58 - _tmp53 * _tmp61;
  const Scalar _tmp73 =
      _tmp18 - _tmp46 * _tmp47 + _tmp5 * _tmp69 + _tmp6 * _tmp71 + _tmp66 - _tmp68 + _tmp72;
  const Scalar _tmp74 = 2 * _tmp39;
  const Scalar _tmp75 = _tmp47 * _tmp58;
  const Scalar _tmp76 = _tmp61 * _tmp71;
  const Scalar _tmp77 = -_tmp21;
  const Scalar _tmp78 = _tmp43 * _tmp67;
  const Scalar _tmp79 = _tmp3 * _tmp44;
  const Scalar _tmp80 = _tmp51 * _tmp79;
  const Scalar _tmp81 = _tmp48 * _tmp56;
  const Scalar _tmp82 = _tmp20 * _tmp46 + _tmp5 * _tmp81 - _tmp53 * _tmp6 + _tmp75 - _tmp76 +
                        _tmp77 + _tmp78 - _tmp80;
  const Scalar _tmp83 = 2 * _tmp34;
  const Scalar _tmp84 = _tmp44 * _tmp58;
  const Scalar _tmp85 = _tmp43 * _tmp61;
  const Scalar _tmp86 = _tmp20 * _tmp48;
  const Scalar _tmp87 = _tmp3 * _tmp47;
  const Scalar _tmp88 = -_tmp51 * _tmp87 + _tmp67 * _tmp71;
  const Scalar _tmp89 =
      _tmp16 - _tmp46 * _tmp56 + _tmp5 * _tmp86 + _tmp6 * _tmp60 - _tmp84 + _tmp85 + _tmp88;
  const Scalar _tmp90 = 2 * _tmp23;
  const Scalar _tmp91 = -_tmp63 * _tmp64 + _tmp73 * _tmp74 + _tmp82 * _tmp83 - _tmp89 * _tmp90;
  const Scalar _tmp92 = -_tmp40;
  const Scalar _tmp93 = (Scalar(1) / Scalar(2)) * _tmp17;
  const Scalar _tmp94 = -Scalar(1) / Scalar(2) * _tmp19;
  const Scalar _tmp95 = (Scalar(1) / Scalar(2)) * _tmp22;
  const Scalar _tmp96 = -_tmp95;
  const Scalar _tmp97 = _tmp92 + _tmp93 + _tmp94 + _tmp96;
  const Scalar _tmp98 = -Scalar(1) / Scalar(2) * _tmp31;
  const Scalar _tmp99 = (Scalar(1) / Scalar(2)) * _tmp32;
  const Scalar _tmp100 = -_tmp99;
  const Scalar _tmp101 = (Scalar(1) / Scalar(2)) * _tmp33;
  const Scalar _tmp102 = -_tmp101;
  const Scalar _tmp103 = _tmp100 + _tmp102 + _tmp70 + _tmp98;
  const Scalar _tmp104 = (Scalar(1) / Scalar(2)) * _tmp35;
  const Scalar _tmp105 = (Scalar(1) / Scalar(2)) * _tmp36;
  const Scalar _tmp106 = (Scalar(1) / Scalar(2)) * _tmp37;
  const Scalar _tmp107 = _tmp104 + _tmp105 - _tmp106 + _tmp52;
  const Scalar _tmp108 = -_tmp59;
  const Scalar _tmp109 = (Scalar(1) / Scalar(2)) * _tmp28;
  const Scalar _tmp110 = (Scalar(1) / Scalar(2)) * _tmp25;
  const Scalar _tmp111 = -Scalar(1) / Scalar(2) * _tmp27;
  const Scalar _tmp112 = -_tmp110 + _tmp111;
  const Scalar _tmp113 = _tmp108 + _tmp109 + _tmp112;
  const Scalar _tmp114 = _tmp103 * _tmp83 + _tmp107 * _tmp74 - _tmp113 * _tmp64 - _tmp90 * _tmp97;
  const Scalar _tmp115 = _tmp4 * _tmp45;
  const Scalar _tmp116 = -_tmp1 * _tmp54 + _tmp50 * _tmp57;
  const Scalar _tmp117 =
      _tmp115 * _tmp56 + _tmp116 - _tmp16 - _tmp4 * _tmp60 + _tmp48 * _tmp79 + _tmp88;
  const Scalar _tmp118 = _tmp57 * _tmp65;
  const Scalar _tmp119 = _tmp1 * _tmp3;
  const Scalar _tmp120 = _tmp119 * _tmp60;
  const Scalar _tmp121 = _tmp115 * _tmp20 - _tmp118 + _tmp120 + _tmp3 * _tmp49 - _tmp4 * _tmp53 +
                         _tmp77 - _tmp78 + _tmp80;
  const Scalar _tmp122 = _tmp57 * _tmp87;
  const Scalar _tmp123 = _tmp119 * _tmp71;
  const Scalar _tmp124 =
      -_tmp115 * _tmp44 + _tmp122 - _tmp123 + _tmp26 + _tmp3 * _tmp81 + _tmp4 * _tmp43 + _tmp55;
  const Scalar _tmp125 = _tmp119 * _tmp43 - _tmp57 * _tmp79;
  const Scalar _tmp126 =
      -_tmp115 * _tmp47 + _tmp125 + _tmp18 + _tmp4 * _tmp71 + _tmp48 * _tmp50 - _tmp66 + _tmp68;
  const Scalar _tmp127 = _tmp117 * _tmp74 - _tmp121 * _tmp64 + _tmp124 * _tmp83 - _tmp126 * _tmp90;
  const Scalar _tmp128 = -_tmp93 + _tmp94;
  const Scalar _tmp129 = _tmp128 + _tmp40 + _tmp96;
  const Scalar _tmp130 = -_tmp109;
  const Scalar _tmp131 = _tmp108 + _tmp110 + _tmp111 + _tmp130;
  const Scalar _tmp132 = _tmp106 + _tmp52;
  const Scalar _tmp133 = -_tmp104 + _tmp105 + _tmp132;
  const Scalar _tmp134 = -_tmp70 + _tmp98;
  const Scalar _tmp135 = _tmp100 + _tmp101 + _tmp134;
  const Scalar _tmp136 = -_tmp129 * _tmp64 - _tmp131 * _tmp90 + _tmp133 * _tmp83 + _tmp135 * _tmp74;
  const Scalar _tmp137 = _tmp2 * _tmp45;
  const Scalar _tmp138 = _tmp1 * _tmp69 + _tmp118 - _tmp120 + _tmp137 * _tmp20 - _tmp2 * _tmp53 -
                         _tmp75 + _tmp76 + _tmp77;
  const Scalar _tmp139 =
      _tmp1 * _tmp81 + _tmp125 + _tmp137 * _tmp47 - _tmp18 - _tmp2 * _tmp71 + _tmp72;
  const Scalar _tmp140 =
      _tmp1 * _tmp49 + _tmp116 - _tmp137 * _tmp56 + _tmp16 + _tmp2 * _tmp60 + _tmp84 - _tmp85;
  const Scalar _tmp141 =
      _tmp1 * _tmp86 - _tmp122 + _tmp123 - _tmp137 * _tmp44 + _tmp2 * _tmp43 + _tmp26 + _tmp62;
  const Scalar _tmp142 = _tmp138 * _tmp74 + _tmp139 * _tmp83 - _tmp140 * _tmp64 - _tmp141 * _tmp90;
  const Scalar _tmp143 = _tmp102 + _tmp134 + _tmp99;
  const Scalar _tmp144 = _tmp128 + _tmp92 + _tmp95;
  const Scalar _tmp145 = _tmp112 + _tmp130 + _tmp59;
  const Scalar _tmp146 = _tmp104 - _tmp105 + _tmp132;
  const Scalar _tmp147 = -_tmp143 * _tmp90 + _tmp144 * _tmp83 + _tmp145 * _tmp74 - _tmp146 * _tmp64;
  const Scalar _tmp148 = _tmp114 * states_cov(0, 1) + _tmp127 * states_cov(8, 1) +
                         _tmp136 * states_cov(1, 1) + _tmp142 * states_cov(6, 1) +
                         _tmp147 * states_cov(2, 1) + _tmp91 * states_cov(7, 1);
  const Scalar _tmp149 = _tmp142 * states_cov(6, 6);
  const Scalar _tmp150 = _tmp114 * states_cov(0, 6) + _tmp127 * states_cov(8, 6) +
                         _tmp136 * states_cov(1, 6) + _tmp147 * states_cov(2, 6) + _tmp149 +
                         _tmp91 * states_cov(7, 6);
  const Scalar _tmp151 = _tmp114 * states_cov(0, 2) + _tmp127 * states_cov(8, 2) +
                         _tmp136 * states_cov(1, 2) + _tmp142 * states_cov(6, 2) +
                         _tmp147 * states_cov(2, 2) + _tmp91 * states_cov(7, 2);
  const Scalar _tmp152 = _tmp127 * states_cov(8, 8);
  const Scalar _tmp153 = _tmp114 * states_cov(0, 8) + _tmp136 * states_cov(1, 8) +
                         _tmp142 * states_cov(6, 8) + _tmp147 * states_cov(2, 8) + _tmp152 +
                         _tmp91 * states_cov(7, 8);
  const Scalar _tmp154 = _tmp91 * states_cov(7, 7);
  const Scalar _tmp155 = _tmp114 * states_cov(0, 7) + _tmp127 * states_cov(8, 7) +
                         _tmp136 * states_cov(1, 7) + _tmp142 * states_cov(6, 7) +
                         _tmp147 * states_cov(2, 7) + _tmp154;
  const Scalar _tmp156 = _tmp114 * states_cov(0, 0) + _tmp127 * states_cov(8, 0) +
                         _tmp136 * states_cov(1, 0) + _tmp142 * states_cov(6, 0) +
                         _tmp147 * states_cov(2, 0) + _tmp91 * states_cov(7, 0);
  const Scalar _tmp157 = -_tmp143 * _tmp64 + _tmp144 * _tmp74 - _tmp145 * _tmp83 + _tmp146 * _tmp90;
  const Scalar _tmp158 = _tmp63 * _tmp90 - _tmp64 * _tmp89 - _tmp73 * _tmp83 + _tmp74 * _tmp82;
  const Scalar _tmp159 = _tmp129 * _tmp90 - _tmp131 * _tmp64 + _tmp133 * _tmp74 - _tmp135 * _tmp83;
  const Scalar _tmp160 = -_tmp138 * _tmp83 + _tmp139 * _tmp74 + _tmp140 * _tmp90 - _tmp141 * _tmp64;
  const Scalar _tmp161 = _tmp103 * _tmp74 - _tmp107 * _tmp83 + _tmp113 * _tmp90 - _tmp64 * _tmp97;
  const Scalar _tmp162 = -_tmp117 * _tmp83 + _tmp121 * _tmp90 + _tmp124 * _tmp74 - _tmp126 * _tmp64;
  const Scalar _tmp163 = _tmp157 * states_cov(2, 0) + _tmp158 * states_cov(7, 0) +
                         _tmp159 * states_cov(1, 0) + _tmp160 * states_cov(6, 0) +
                         _tmp161 * states_cov(0, 0) + _tmp162 * states_cov(8, 0);
  const Scalar _tmp164 = _tmp160 * states_cov(6, 6);
  const Scalar _tmp165 = _tmp157 * states_cov(2, 6) + _tmp158 * states_cov(7, 6) +
                         _tmp159 * states_cov(1, 6) + _tmp161 * states_cov(0, 6) +
                         _tmp162 * states_cov(8, 6) + _tmp164;
  const Scalar _tmp166 = _tmp157 * states_cov(2, 1) + _tmp158 * states_cov(7, 1) +
                         _tmp159 * states_cov(1, 1) + _tmp160 * states_cov(6, 1) +
                         _tmp161 * states_cov(0, 1) + _tmp162 * states_cov(8, 1);
  const Scalar _tmp167 = _tmp157 * states_cov(2, 2) + _tmp158 * states_cov(7, 2) +
                         _tmp159 * states_cov(1, 2) + _tmp160 * states_cov(6, 2) +
                         _tmp161 * states_cov(0, 2) + _tmp162 * states_cov(8, 2);
  const Scalar _tmp168 = _tmp162 * states_cov(8, 8);
  const Scalar _tmp169 = _tmp157 * states_cov(2, 8) + _tmp158 * states_cov(7, 8) +
                         _tmp159 * states_cov(1, 8) + _tmp160 * states_cov(6, 8) +
                         _tmp161 * states_cov(0, 8) + _tmp168;
  const Scalar _tmp170 = _tmp158 * states_cov(7, 7);
  const Scalar _tmp171 = _tmp157 * states_cov(2, 7) + _tmp159 * states_cov(1, 7) +
                         _tmp160 * states_cov(6, 7) + _tmp161 * states_cov(0, 7) +
                         _tmp162 * states_cov(8, 7) + _tmp170;
  const Scalar _tmp172 = _tmp129 * _tmp74 - _tmp131 * _tmp83 - _tmp133 * _tmp90 + _tmp135 * _tmp64;
  const Scalar _tmp173 = _tmp63 * _tmp74 + _tmp64 * _tmp73 - _tmp82 * _tmp90 - _tmp83 * _tmp89;
  const Scalar _tmp174 = _tmp173 * states_cov(7, 7);
  const Scalar _tmp175 = -_tmp143 * _tmp83 - _tmp144 * _tmp90 + _tmp145 * _tmp64 + _tmp146 * _tmp74;
  const Scalar _tmp176 = _tmp138 * _tmp64 - _tmp139 * _tmp90 + _tmp140 * _tmp74 - _tmp141 * _tmp83;
  const Scalar _tmp177 = _tmp117 * _tmp64 + _tmp121 * _tmp74 - _tmp124 * _tmp90 - _tmp126 * _tmp83;
  const Scalar _tmp178 = -_tmp103 * _tmp90 + _tmp107 * _tmp64 + _tmp113 * _tmp74 - _tmp83 * _tmp97;
  const Scalar _tmp179 = _tmp172 * states_cov(1, 7) + _tmp174 + _tmp175 * states_cov(2, 7) +
                         _tmp176 * states_cov(6, 7) + _tmp177 * states_cov(8, 7) +
                         _tmp178 * states_cov(0, 7);
  const Scalar _tmp180 = _tmp172 * states_cov(1, 1) + _tmp173 * states_cov(7, 1) +
                         _tmp175 * states_cov(2, 1) + _tmp176 * states_cov(6, 1) +
                         _tmp177 * states_cov(8, 1) + _tmp178 * states_cov(0, 1);
  const Scalar _tmp181 = _tmp176 * states_cov(6, 6);
  const Scalar _tmp182 = _tmp172 * states_cov(1, 6) + _tmp173 * states_cov(7, 6) +
                         _tmp175 * states_cov(2, 6) + _tmp177 * states_cov(8, 6) +
                         _tmp178 * states_cov(0, 6) + _tmp181;
  const Scalar _tmp183 = _tmp172 * states_cov(1, 2) + _tmp173 * states_cov(7, 2) +
                         _tmp175 * states_cov(2, 2) + _tmp176 * states_cov(6, 2) +
                         _tmp177 * states_cov(8, 2) + _tmp178 * states_cov(0, 2);
  const Scalar _tmp184 = _tmp177 * states_cov(8, 8);
  const Scalar _tmp185 = _tmp172 * states_cov(1, 8) + _tmp173 * states_cov(7, 8) +
                         _tmp175 * states_cov(2, 8) + _tmp176 * states_cov(6, 8) +
                         _tmp178 * states_cov(0, 8) + _tmp184;
  const Scalar _tmp186 = _tmp172 * states_cov(1, 0) + _tmp173 * states_cov(7, 0) +
                         _tmp175 * states_cov(2, 0) + _tmp176 * states_cov(6, 0) +
                         _tmp177 * states_cov(8, 0) + _tmp178 * states_cov(0, 0);
  const Scalar _tmp187 = Scalar(0.69999999999999996) * states_cov(3, 7);
  const Scalar _tmp188 = Scalar(0.69999999999999996) * _tmp114;
  const Scalar _tmp189 = Scalar(0.69999999999999996) * states_cov(3, 8);
  const Scalar _tmp190 = Scalar(0.69999999999999996) * _tmp136;
  const Scalar _tmp191 = Scalar(0.69999999999999996) * states_cov(3, 6);
  const Scalar _tmp192 = Scalar(0.69999999999999996) * _tmp147;
  const Scalar _tmp193 = Scalar(0.69999999999999996) * states_cov(4, 7);
  const Scalar _tmp194 = Scalar(0.69999999999999996) * states_cov(4, 8);
  const Scalar _tmp195 = Scalar(0.69999999999999996) * states_cov(4, 6);
  const Scalar _tmp196 = Scalar(0.69999999999999996) * states_cov(4, 2);
  const Scalar _tmp197 = Scalar(0.69999999999999996) * states_cov(5, 7);
  const Scalar _tmp198 = Scalar(0.69999999999999996) * states_cov(5, 8);
  const Scalar _tmp199 = Scalar(0.69999999999999996) * states_cov(5, 6);
  const Scalar _tmp200 = Scalar(0.94999999999999996) * states_cov(9, 7);
  const Scalar _tmp201 = Scalar(0.94999999999999996) * _tmp114;
  const Scalar _tmp202 = Scalar(0.94999999999999996) * states_cov(9, 8);
  const Scalar _tmp203 = Scalar(0.94999999999999996) * states_cov(9, 1);
  const Scalar _tmp204 = Scalar(0.94999999999999996) * states_cov(9, 6);
  const Scalar _tmp205 = Scalar(0.94999999999999996) * _tmp147;
  const Scalar _tmp206 = Scalar(0.94999999999999996) * states_cov(10, 8);
  const Scalar _tmp207 = Scalar(0.94999999999999996) * states_cov(10, 6);
  const Scalar _tmp208 = Scalar(0.94999999999999996) * states_cov(10, 7);
  const Scalar _tmp209 = Scalar(0.94999999999999996) * _tmp136;
  const Scalar _tmp210 = Scalar(0.94999999999999996) * states_cov(11, 8);
  const Scalar _tmp211 = Scalar(0.94999999999999996) * states_cov(11, 6);
  const Scalar _tmp212 = Scalar(0.94999999999999996) * states_cov(11, 7);
  const Scalar _tmp213 = std::pow(states(13, 0), Scalar(2)) + std::pow(states(14, 0), Scalar(2)) +
                         std::pow(states(15, 0), Scalar(2)) + std::pow(states(16, 0), Scalar(2));
  const Scalar _tmp214 = _tmp147 * _tmp213;
  const Scalar _tmp215 = _tmp136 * _tmp213;
  const Scalar _tmp216 = _tmp213 * states_cov(12, 7);
  const Scalar _tmp217 = _tmp213 * states_cov(12, 8);
  const Scalar _tmp218 = _tmp213 * states_cov(12, 6);
  const Scalar _tmp219 = _tmp114 * _tmp213;
  const Scalar _tmp220 = _tmp213 * states_cov(13, 7);
  const Scalar _tmp221 = _tmp213 * states_cov(13, 8);
  const Scalar _tmp222 = _tmp213 * states_cov(13, 6);
  const Scalar _tmp223 = _tmp213 * states_cov(14, 7);
  const Scalar _tmp224 = _tmp213 * states_cov(14, 8);
  const Scalar _tmp225 = _tmp213 * states_cov(14, 6);
  const Scalar _tmp226 = Scalar(0.69999999999999996) * _tmp157;
  const Scalar _tmp227 = Scalar(0.69999999999999996) * _tmp159;
  const Scalar _tmp228 = Scalar(0.69999999999999996) * _tmp161;
  const Scalar _tmp229 = Scalar(0.94999999999999996) * _tmp157;
  const Scalar _tmp230 = Scalar(0.94999999999999996) * _tmp159;
  const Scalar _tmp231 = Scalar(0.94999999999999996) * states_cov(9, 0);
  const Scalar _tmp232 = Scalar(0.94999999999999996) * _tmp161;
  const Scalar _tmp233 = _tmp157 * _tmp213;
  const Scalar _tmp234 = _tmp161 * _tmp213;
  const Scalar _tmp235 = _tmp159 * _tmp213;
  const Scalar _tmp236 = Scalar(0.69999999999999996) * _tmp172;
  const Scalar _tmp237 = Scalar(0.69999999999999996) * _tmp175;
  const Scalar _tmp238 = Scalar(0.69999999999999996) * _tmp178;
  const Scalar _tmp239 = Scalar(0.94999999999999996) * _tmp175;
  const Scalar _tmp240 = Scalar(0.94999999999999996) * _tmp172;
  const Scalar _tmp241 = Scalar(0.94999999999999996) * _tmp178;
  const Scalar _tmp242 = _tmp172 * _tmp213;
  const Scalar _tmp243 = _tmp178 * _tmp213;
  const Scalar _tmp244 = _tmp175 * _tmp213;
  const Scalar _tmp245 = Scalar(0.69999999999999996) * _tmp213;
  const Scalar _tmp246 = Scalar(0.94999999999999996) * _tmp213;
  const Scalar _tmp247 = std::pow(_tmp213, Scalar(2));

  // Output terms (2)
  if (next_states != nullptr) {
    Eigen::Matrix<Scalar, 17, 1>& _next_states = (*next_states);

    _next_states(0, 0) = _tmp23;
    _next_states(1, 0) = _tmp29;
    _next_states(2, 0) = _tmp34;
    _next_states(3, 0) = _tmp39;
    _next_states(4, 0) = Scalar(0.69999999999999996) * states(4, 0);
    _next_states(5, 0) = Scalar(0.69999999999999996) * states(5, 0);
    _next_states(6, 0) = Scalar(0.69999999999999996) * states(6, 0);
    _next_states(7, 0) = states(7, 0);
    _next_states(8, 0) = states(8, 0);
    _next_states(9, 0) = states(9, 0);
    _next_states(10, 0) = Scalar(0.94999999999999996) * states(10, 0);
    _next_states(11, 0) = Scalar(0.94999999999999996) * states(11, 0);
    _next_states(12, 0) = Scalar(0.94999999999999996) * states(12, 0);
    _next_states(13, 0) = states(13, 0);
    _next_states(14, 0) = states(14, 0);
    _next_states(15, 0) = states(15, 0);
    _next_states(16, 0) = states(16, 0);
  }

  if (next_states_cov != nullptr) {
    Eigen::Matrix<Scalar, 15, 15>& _next_states_cov = (*next_states_cov);

    _next_states_cov(0, 0) = _tmp114 * _tmp156 + _tmp127 * _tmp153 + _tmp136 * _tmp148 +
                             _tmp142 * _tmp150 + _tmp147 * _tmp151 + _tmp155 * _tmp91 +
                             dt * gyro_noise(0, 0);
    _next_states_cov(1, 0) = _tmp114 * _tmp163 + _tmp127 * _tmp169 + _tmp136 * _tmp166 +
                             _tmp142 * _tmp165 + _tmp147 * _tmp167 + _tmp171 * _tmp91;
    _next_states_cov(2, 0) = _tmp114 * _tmp186 + _tmp127 * _tmp185 + _tmp136 * _tmp180 +
                             _tmp142 * _tmp182 + _tmp147 * _tmp183 + _tmp179 * _tmp91;
    _next_states_cov(3, 0) = _tmp127 * _tmp189 + _tmp142 * _tmp191 + _tmp187 * _tmp91 +
                             _tmp188 * states_cov(3, 0) + _tmp190 * states_cov(3, 1) +
                             _tmp192 * states_cov(3, 2);
    _next_states_cov(4, 0) = _tmp127 * _tmp194 + _tmp142 * _tmp195 + _tmp147 * _tmp196 +
                             _tmp188 * states_cov(4, 0) + _tmp190 * states_cov(4, 1) +
                             _tmp193 * _tmp91;
    _next_states_cov(5, 0) = _tmp127 * _tmp198 + _tmp142 * _tmp199 + _tmp188 * states_cov(5, 0) +
                             _tmp190 * states_cov(5, 1) + _tmp192 * states_cov(5, 2) +
                             _tmp197 * _tmp91;
    _next_states_cov(6, 0) = _tmp114 * states_cov(6, 0) + _tmp127 * states_cov(6, 8) +
                             _tmp136 * states_cov(6, 1) + _tmp147 * states_cov(6, 2) + _tmp149 +
                             _tmp91 * states_cov(6, 7);
    _next_states_cov(7, 0) = _tmp114 * states_cov(7, 0) + _tmp127 * states_cov(7, 8) +
                             _tmp136 * states_cov(7, 1) + _tmp142 * states_cov(7, 6) +
                             _tmp147 * states_cov(7, 2) + _tmp154;
    _next_states_cov(8, 0) = _tmp114 * states_cov(8, 0) + _tmp136 * states_cov(8, 1) +
                             _tmp142 * states_cov(8, 6) + _tmp147 * states_cov(8, 2) + _tmp152 +
                             _tmp91 * states_cov(8, 7);
    _next_states_cov(9, 0) = _tmp127 * _tmp202 + _tmp136 * _tmp203 + _tmp142 * _tmp204 +
                             _tmp200 * _tmp91 + _tmp201 * states_cov(9, 0) +
                             _tmp205 * states_cov(9, 2);
    _next_states_cov(10, 0) = _tmp127 * _tmp206 + _tmp142 * _tmp207 + _tmp201 * states_cov(10, 0) +
                              _tmp205 * states_cov(10, 2) + _tmp208 * _tmp91 +
                              _tmp209 * states_cov(10, 1);
    _next_states_cov(11, 0) = _tmp127 * _tmp210 + _tmp142 * _tmp211 + _tmp201 * states_cov(11, 0) +
                              _tmp205 * states_cov(11, 2) + _tmp209 * states_cov(11, 1) +
                              _tmp212 * _tmp91;
    _next_states_cov(12, 0) = _tmp127 * _tmp217 + _tmp142 * _tmp218 + _tmp214 * states_cov(12, 2) +
                              _tmp215 * states_cov(12, 1) + _tmp216 * _tmp91 +
                              _tmp219 * states_cov(12, 0);
    _next_states_cov(13, 0) = _tmp127 * _tmp221 + _tmp142 * _tmp222 + _tmp214 * states_cov(13, 2) +
                              _tmp215 * states_cov(13, 1) + _tmp219 * states_cov(13, 0) +
                              _tmp220 * _tmp91;
    _next_states_cov(14, 0) = _tmp127 * _tmp224 + _tmp142 * _tmp225 + _tmp214 * states_cov(14, 2) +
                              _tmp215 * states_cov(14, 1) + _tmp219 * states_cov(14, 0) +
                              _tmp223 * _tmp91;
    _next_states_cov(0, 1) = _tmp148 * _tmp159 + _tmp150 * _tmp160 + _tmp151 * _tmp157 +
                             _tmp153 * _tmp162 + _tmp155 * _tmp158 + _tmp156 * _tmp161;
    _next_states_cov(1, 1) = _tmp157 * _tmp167 + _tmp158 * _tmp171 + _tmp159 * _tmp166 +
                             _tmp160 * _tmp165 + _tmp161 * _tmp163 + _tmp162 * _tmp169 +
                             dt * gyro_noise(1, 0);
    _next_states_cov(2, 1) = _tmp157 * _tmp183 + _tmp158 * _tmp179 + _tmp159 * _tmp180 +
                             _tmp160 * _tmp182 + _tmp161 * _tmp186 + _tmp162 * _tmp185;
    _next_states_cov(3, 1) = _tmp158 * _tmp187 + _tmp160 * _tmp191 + _tmp162 * _tmp189 +
                             _tmp226 * states_cov(3, 2) + _tmp227 * states_cov(3, 1) +
                             _tmp228 * states_cov(3, 0);
    _next_states_cov(4, 1) = _tmp157 * _tmp196 + _tmp158 * _tmp193 + _tmp160 * _tmp195 +
                             _tmp162 * _tmp194 + _tmp227 * states_cov(4, 1) +
                             _tmp228 * states_cov(4, 0);
    _next_states_cov(5, 1) = _tmp158 * _tmp197 + _tmp160 * _tmp199 + _tmp162 * _tmp198 +
                             _tmp226 * states_cov(5, 2) + _tmp227 * states_cov(5, 1) +
                             _tmp228 * states_cov(5, 0);
    _next_states_cov(6, 1) = _tmp157 * states_cov(6, 2) + _tmp158 * states_cov(6, 7) +
                             _tmp159 * states_cov(6, 1) + _tmp161 * states_cov(6, 0) +
                             _tmp162 * states_cov(6, 8) + _tmp164;
    _next_states_cov(7, 1) = _tmp157 * states_cov(7, 2) + _tmp159 * states_cov(7, 1) +
                             _tmp160 * states_cov(7, 6) + _tmp161 * states_cov(7, 0) +
                             _tmp162 * states_cov(7, 8) + _tmp170;
    _next_states_cov(8, 1) = _tmp157 * states_cov(8, 2) + _tmp158 * states_cov(8, 7) +
                             _tmp159 * states_cov(8, 1) + _tmp160 * states_cov(8, 6) +
                             _tmp161 * states_cov(8, 0) + _tmp168;
    _next_states_cov(9, 1) = _tmp158 * _tmp200 + _tmp160 * _tmp204 + _tmp161 * _tmp231 +
                             _tmp162 * _tmp202 + _tmp229 * states_cov(9, 2) +
                             _tmp230 * states_cov(9, 1);
    _next_states_cov(10, 1) = _tmp158 * _tmp208 + _tmp160 * _tmp207 + _tmp162 * _tmp206 +
                              _tmp229 * states_cov(10, 2) + _tmp230 * states_cov(10, 1) +
                              _tmp232 * states_cov(10, 0);
    _next_states_cov(11, 1) = _tmp158 * _tmp212 + _tmp160 * _tmp211 + _tmp162 * _tmp210 +
                              _tmp229 * states_cov(11, 2) + _tmp230 * states_cov(11, 1) +
                              _tmp232 * states_cov(11, 0);
    _next_states_cov(12, 1) = _tmp158 * _tmp216 + _tmp160 * _tmp218 + _tmp162 * _tmp217 +
                              _tmp233 * states_cov(12, 2) + _tmp234 * states_cov(12, 0) +
                              _tmp235 * states_cov(12, 1);
    _next_states_cov(13, 1) = _tmp158 * _tmp220 + _tmp160 * _tmp222 + _tmp162 * _tmp221 +
                              _tmp233 * states_cov(13, 2) + _tmp234 * states_cov(13, 0) +
                              _tmp235 * states_cov(13, 1);
    _next_states_cov(14, 1) = _tmp158 * _tmp223 + _tmp160 * _tmp225 + _tmp162 * _tmp224 +
                              _tmp233 * states_cov(14, 2) + _tmp234 * states_cov(14, 0) +
                              _tmp235 * states_cov(14, 1);
    _next_states_cov(0, 2) = _tmp148 * _tmp172 + _tmp150 * _tmp176 + _tmp151 * _tmp175 +
                             _tmp153 * _tmp177 + _tmp155 * _tmp173 + _tmp156 * _tmp178;
    _next_states_cov(1, 2) = _tmp163 * _tmp178 + _tmp165 * _tmp176 + _tmp166 * _tmp172 +
                             _tmp167 * _tmp175 + _tmp169 * _tmp177 + _tmp171 * _tmp173;
    _next_states_cov(2, 2) = _tmp172 * _tmp180 + _tmp173 * _tmp179 + _tmp175 * _tmp183 +
                             _tmp176 * _tmp182 + _tmp177 * _tmp185 + _tmp178 * _tmp186 +
                             dt * gyro_noise(2, 0);
    _next_states_cov(3, 2) = _tmp173 * _tmp187 + _tmp176 * _tmp191 + _tmp177 * _tmp189 +
                             _tmp236 * states_cov(3, 1) + _tmp237 * states_cov(3, 2) +
                             _tmp238 * states_cov(3, 0);
    _next_states_cov(4, 2) = _tmp173 * _tmp193 + _tmp175 * _tmp196 + _tmp176 * _tmp195 +
                             _tmp177 * _tmp194 + _tmp236 * states_cov(4, 1) +
                             _tmp238 * states_cov(4, 0);
    _next_states_cov(5, 2) = _tmp173 * _tmp197 + _tmp176 * _tmp199 + _tmp177 * _tmp198 +
                             _tmp236 * states_cov(5, 1) + _tmp237 * states_cov(5, 2) +
                             _tmp238 * states_cov(5, 0);
    _next_states_cov(6, 2) = _tmp172 * states_cov(6, 1) + _tmp173 * states_cov(6, 7) +
                             _tmp175 * states_cov(6, 2) + _tmp177 * states_cov(6, 8) +
                             _tmp178 * states_cov(6, 0) + _tmp181;
    _next_states_cov(7, 2) = _tmp172 * states_cov(7, 1) + _tmp174 + _tmp175 * states_cov(7, 2) +
                             _tmp176 * states_cov(7, 6) + _tmp177 * states_cov(7, 8) +
                             _tmp178 * states_cov(7, 0);
    _next_states_cov(8, 2) = _tmp172 * states_cov(8, 1) + _tmp173 * states_cov(8, 7) +
                             _tmp175 * states_cov(8, 2) + _tmp176 * states_cov(8, 6) +
                             _tmp178 * states_cov(8, 0) + _tmp184;
    _next_states_cov(9, 2) = _tmp172 * _tmp203 + _tmp173 * _tmp200 + _tmp176 * _tmp204 +
                             _tmp177 * _tmp202 + _tmp178 * _tmp231 + _tmp239 * states_cov(9, 2);
    _next_states_cov(10, 2) = _tmp173 * _tmp208 + _tmp176 * _tmp207 + _tmp177 * _tmp206 +
                              _tmp239 * states_cov(10, 2) + _tmp240 * states_cov(10, 1) +
                              _tmp241 * states_cov(10, 0);
    _next_states_cov(11, 2) = _tmp173 * _tmp212 + _tmp176 * _tmp211 + _tmp177 * _tmp210 +
                              _tmp239 * states_cov(11, 2) + _tmp240 * states_cov(11, 1) +
                              _tmp241 * states_cov(11, 0);
    _next_states_cov(12, 2) = _tmp173 * _tmp216 + _tmp176 * _tmp218 + _tmp177 * _tmp217 +
                              _tmp242 * states_cov(12, 1) + _tmp243 * states_cov(12, 0) +
                              _tmp244 * states_cov(12, 2);
    _next_states_cov(13, 2) = _tmp173 * _tmp220 + _tmp176 * _tmp222 + _tmp177 * _tmp221 +
                              _tmp242 * states_cov(13, 1) + _tmp243 * states_cov(13, 0) +
                              _tmp244 * states_cov(13, 2);
    _next_states_cov(14, 2) = _tmp173 * _tmp223 + _tmp176 * _tmp225 + _tmp177 * _tmp224 +
                              _tmp242 * states_cov(14, 1) + _tmp243 * states_cov(14, 0) +
                              _tmp244 * states_cov(14, 2);
    _next_states_cov(0, 3) = Scalar(0.69999999999999996) * _tmp114 * states_cov(0, 3) +
                             Scalar(0.69999999999999996) * _tmp127 * states_cov(8, 3) +
                             Scalar(0.69999999999999996) * _tmp136 * states_cov(1, 3) +
                             Scalar(0.69999999999999996) * _tmp142 * states_cov(6, 3) +
                             Scalar(0.69999999999999996) * _tmp147 * states_cov(2, 3) +
                             Scalar(0.69999999999999996) * _tmp91 * states_cov(7, 3);
    _next_states_cov(1, 3) = Scalar(0.69999999999999996) * _tmp157 * states_cov(2, 3) +
                             Scalar(0.69999999999999996) * _tmp158 * states_cov(7, 3) +
                             Scalar(0.69999999999999996) * _tmp159 * states_cov(1, 3) +
                             Scalar(0.69999999999999996) * _tmp160 * states_cov(6, 3) +
                             Scalar(0.69999999999999996) * _tmp161 * states_cov(0, 3) +
                             Scalar(0.69999999999999996) * _tmp162 * states_cov(8, 3);
    _next_states_cov(2, 3) = Scalar(0.69999999999999996) * _tmp172 * states_cov(1, 3) +
                             Scalar(0.69999999999999996) * _tmp173 * states_cov(7, 3) +
                             Scalar(0.69999999999999996) * _tmp175 * states_cov(2, 3) +
                             Scalar(0.69999999999999996) * _tmp176 * states_cov(6, 3) +
                             Scalar(0.69999999999999996) * _tmp177 * states_cov(8, 3) +
                             Scalar(0.69999999999999996) * _tmp178 * states_cov(0, 3);
    _next_states_cov(3, 3) =
        accel_bias_noise(0, 0) * dt + Scalar(0.48999999999999999) * states_cov(3, 3);
    _next_states_cov(4, 3) = Scalar(0.48999999999999999) * states_cov(4, 3);
    _next_states_cov(5, 3) = Scalar(0.48999999999999999) * states_cov(5, 3);
    _next_states_cov(6, 3) = Scalar(0.69999999999999996) * states_cov(6, 3);
    _next_states_cov(7, 3) = Scalar(0.69999999999999996) * states_cov(7, 3);
    _next_states_cov(8, 3) = Scalar(0.69999999999999996) * states_cov(8, 3);
    _next_states_cov(9, 3) = Scalar(0.66500000000000004) * states_cov(9, 3);
    _next_states_cov(10, 3) = Scalar(0.66500000000000004) * states_cov(10, 3);
    _next_states_cov(11, 3) = Scalar(0.66500000000000004) * states_cov(11, 3);
    _next_states_cov(12, 3) = _tmp245 * states_cov(12, 3);
    _next_states_cov(13, 3) = _tmp245 * states_cov(13, 3);
    _next_states_cov(14, 3) = _tmp245 * states_cov(14, 3);
    _next_states_cov(0, 4) = Scalar(0.69999999999999996) * _tmp114 * states_cov(0, 4) +
                             Scalar(0.69999999999999996) * _tmp127 * states_cov(8, 4) +
                             Scalar(0.69999999999999996) * _tmp136 * states_cov(1, 4) +
                             Scalar(0.69999999999999996) * _tmp142 * states_cov(6, 4) +
                             Scalar(0.69999999999999996) * _tmp147 * states_cov(2, 4) +
                             Scalar(0.69999999999999996) * _tmp91 * states_cov(7, 4);
    _next_states_cov(1, 4) = Scalar(0.69999999999999996) * _tmp157 * states_cov(2, 4) +
                             Scalar(0.69999999999999996) * _tmp158 * states_cov(7, 4) +
                             Scalar(0.69999999999999996) * _tmp159 * states_cov(1, 4) +
                             Scalar(0.69999999999999996) * _tmp160 * states_cov(6, 4) +
                             Scalar(0.69999999999999996) * _tmp161 * states_cov(0, 4) +
                             Scalar(0.69999999999999996) * _tmp162 * states_cov(8, 4);
    _next_states_cov(2, 4) = Scalar(0.69999999999999996) * _tmp172 * states_cov(1, 4) +
                             Scalar(0.69999999999999996) * _tmp173 * states_cov(7, 4) +
                             Scalar(0.69999999999999996) * _tmp175 * states_cov(2, 4) +
                             Scalar(0.69999999999999996) * _tmp176 * states_cov(6, 4) +
                             Scalar(0.69999999999999996) * _tmp177 * states_cov(8, 4) +
                             Scalar(0.69999999999999996) * _tmp178 * states_cov(0, 4);
    _next_states_cov(3, 4) = Scalar(0.48999999999999999) * states_cov(3, 4);
    _next_states_cov(4, 4) =
        accel_bias_noise(1, 0) * dt + Scalar(0.48999999999999999) * states_cov(4, 4);
    _next_states_cov(5, 4) = Scalar(0.48999999999999999) * states_cov(5, 4);
    _next_states_cov(6, 4) = Scalar(0.69999999999999996) * states_cov(6, 4);
    _next_states_cov(7, 4) = Scalar(0.69999999999999996) * states_cov(7, 4);
    _next_states_cov(8, 4) = Scalar(0.69999999999999996) * states_cov(8, 4);
    _next_states_cov(9, 4) = Scalar(0.66500000000000004) * states_cov(9, 4);
    _next_states_cov(10, 4) = Scalar(0.66500000000000004) * states_cov(10, 4);
    _next_states_cov(11, 4) = Scalar(0.66500000000000004) * states_cov(11, 4);
    _next_states_cov(12, 4) = _tmp245 * states_cov(12, 4);
    _next_states_cov(13, 4) = _tmp245 * states_cov(13, 4);
    _next_states_cov(14, 4) = _tmp245 * states_cov(14, 4);
    _next_states_cov(0, 5) = Scalar(0.69999999999999996) * _tmp114 * states_cov(0, 5) +
                             Scalar(0.69999999999999996) * _tmp127 * states_cov(8, 5) +
                             Scalar(0.69999999999999996) * _tmp136 * states_cov(1, 5) +
                             Scalar(0.69999999999999996) * _tmp142 * states_cov(6, 5) +
                             Scalar(0.69999999999999996) * _tmp147 * states_cov(2, 5) +
                             Scalar(0.69999999999999996) * _tmp91 * states_cov(7, 5);
    _next_states_cov(1, 5) = Scalar(0.69999999999999996) * _tmp157 * states_cov(2, 5) +
                             Scalar(0.69999999999999996) * _tmp158 * states_cov(7, 5) +
                             Scalar(0.69999999999999996) * _tmp159 * states_cov(1, 5) +
                             Scalar(0.69999999999999996) * _tmp160 * states_cov(6, 5) +
                             Scalar(0.69999999999999996) * _tmp161 * states_cov(0, 5) +
                             Scalar(0.69999999999999996) * _tmp162 * states_cov(8, 5);
    _next_states_cov(2, 5) = Scalar(0.69999999999999996) * _tmp172 * states_cov(1, 5) +
                             Scalar(0.69999999999999996) * _tmp173 * states_cov(7, 5) +
                             Scalar(0.69999999999999996) * _tmp175 * states_cov(2, 5) +
                             Scalar(0.69999999999999996) * _tmp176 * states_cov(6, 5) +
                             Scalar(0.69999999999999996) * _tmp177 * states_cov(8, 5) +
                             Scalar(0.69999999999999996) * _tmp178 * states_cov(0, 5);
    _next_states_cov(3, 5) = Scalar(0.48999999999999999) * states_cov(3, 5);
    _next_states_cov(4, 5) = Scalar(0.48999999999999999) * states_cov(4, 5);
    _next_states_cov(5, 5) =
        accel_bias_noise(2, 0) * dt + Scalar(0.48999999999999999) * states_cov(5, 5);
    _next_states_cov(6, 5) = Scalar(0.69999999999999996) * states_cov(6, 5);
    _next_states_cov(7, 5) = Scalar(0.69999999999999996) * states_cov(7, 5);
    _next_states_cov(8, 5) = Scalar(0.69999999999999996) * states_cov(8, 5);
    _next_states_cov(9, 5) = Scalar(0.66500000000000004) * states_cov(9, 5);
    _next_states_cov(10, 5) = Scalar(0.66500000000000004) * states_cov(10, 5);
    _next_states_cov(11, 5) = Scalar(0.66500000000000004) * states_cov(11, 5);
    _next_states_cov(12, 5) = _tmp245 * states_cov(12, 5);
    _next_states_cov(13, 5) = _tmp245 * states_cov(13, 5);
    _next_states_cov(14, 5) = _tmp245 * states_cov(14, 5);
    _next_states_cov(0, 6) = _tmp150;
    _next_states_cov(1, 6) = _tmp165;
    _next_states_cov(2, 6) = _tmp182;
    _next_states_cov(3, 6) = _tmp191;
    _next_states_cov(4, 6) = _tmp195;
    _next_states_cov(5, 6) = _tmp199;
    _next_states_cov(6, 6) = dt * gyro_bias_noise(0, 0) + states_cov(6, 6);
    _next_states_cov(7, 6) = states_cov(7, 6);
    _next_states_cov(8, 6) = states_cov(8, 6);
    _next_states_cov(9, 6) = _tmp204;
    _next_states_cov(10, 6) = _tmp207;
    _next_states_cov(11, 6) = _tmp211;
    _next_states_cov(12, 6) = _tmp218;
    _next_states_cov(13, 6) = _tmp222;
    _next_states_cov(14, 6) = _tmp225;
    _next_states_cov(0, 7) = _tmp155;
    _next_states_cov(1, 7) = _tmp171;
    _next_states_cov(2, 7) = _tmp179;
    _next_states_cov(3, 7) = _tmp187;
    _next_states_cov(4, 7) = _tmp193;
    _next_states_cov(5, 7) = _tmp197;
    _next_states_cov(6, 7) = states_cov(6, 7);
    _next_states_cov(7, 7) = dt * gyro_bias_noise(1, 0) + states_cov(7, 7);
    _next_states_cov(8, 7) = states_cov(8, 7);
    _next_states_cov(9, 7) = _tmp200;
    _next_states_cov(10, 7) = _tmp208;
    _next_states_cov(11, 7) = _tmp212;
    _next_states_cov(12, 7) = _tmp216;
    _next_states_cov(13, 7) = _tmp220;
    _next_states_cov(14, 7) = _tmp223;
    _next_states_cov(0, 8) = _tmp153;
    _next_states_cov(1, 8) = _tmp169;
    _next_states_cov(2, 8) = _tmp185;
    _next_states_cov(3, 8) = _tmp189;
    _next_states_cov(4, 8) = _tmp194;
    _next_states_cov(5, 8) = _tmp198;
    _next_states_cov(6, 8) = states_cov(6, 8);
    _next_states_cov(7, 8) = states_cov(7, 8);
    _next_states_cov(8, 8) = dt * gyro_bias_noise(2, 0) + states_cov(8, 8);
    _next_states_cov(9, 8) = _tmp202;
    _next_states_cov(10, 8) = _tmp206;
    _next_states_cov(11, 8) = _tmp210;
    _next_states_cov(12, 8) = _tmp217;
    _next_states_cov(13, 8) = _tmp221;
    _next_states_cov(14, 8) = _tmp224;
    _next_states_cov(0, 9) = Scalar(0.94999999999999996) * _tmp114 * states_cov(0, 9) +
                             Scalar(0.94999999999999996) * _tmp127 * states_cov(8, 9) +
                             Scalar(0.94999999999999996) * _tmp136 * states_cov(1, 9) +
                             Scalar(0.94999999999999996) * _tmp142 * states_cov(6, 9) +
                             Scalar(0.94999999999999996) * _tmp147 * states_cov(2, 9) +
                             Scalar(0.94999999999999996) * _tmp91 * states_cov(7, 9);
    _next_states_cov(1, 9) = Scalar(0.94999999999999996) * _tmp157 * states_cov(2, 9) +
                             Scalar(0.94999999999999996) * _tmp158 * states_cov(7, 9) +
                             Scalar(0.94999999999999996) * _tmp159 * states_cov(1, 9) +
                             Scalar(0.94999999999999996) * _tmp160 * states_cov(6, 9) +
                             Scalar(0.94999999999999996) * _tmp161 * states_cov(0, 9) +
                             Scalar(0.94999999999999996) * _tmp162 * states_cov(8, 9);
    _next_states_cov(2, 9) = Scalar(0.94999999999999996) * _tmp172 * states_cov(1, 9) +
                             Scalar(0.94999999999999996) * _tmp173 * states_cov(7, 9) +
                             Scalar(0.94999999999999996) * _tmp175 * states_cov(2, 9) +
                             Scalar(0.94999999999999996) * _tmp176 * states_cov(6, 9) +
                             Scalar(0.94999999999999996) * _tmp177 * states_cov(8, 9) +
                             Scalar(0.94999999999999996) * _tmp178 * states_cov(0, 9);
    _next_states_cov(3, 9) = Scalar(0.66500000000000004) * states_cov(3, 9);
    _next_states_cov(4, 9) = Scalar(0.66500000000000004) * states_cov(4, 9);
    _next_states_cov(5, 9) = Scalar(0.66500000000000004) * states_cov(5, 9);
    _next_states_cov(6, 9) = Scalar(0.94999999999999996) * states_cov(6, 9);
    _next_states_cov(7, 9) = Scalar(0.94999999999999996) * states_cov(7, 9);
    _next_states_cov(8, 9) = Scalar(0.94999999999999996) * states_cov(8, 9);
    _next_states_cov(9, 9) =
        dt * mag_bias_noise(0, 0) + Scalar(0.90249999999999997) * states_cov(9, 9);
    _next_states_cov(10, 9) = Scalar(0.90249999999999997) * states_cov(10, 9);
    _next_states_cov(11, 9) = Scalar(0.90249999999999997) * states_cov(11, 9);
    _next_states_cov(12, 9) = _tmp246 * states_cov(12, 9);
    _next_states_cov(13, 9) = _tmp246 * states_cov(13, 9);
    _next_states_cov(14, 9) = _tmp246 * states_cov(14, 9);
    _next_states_cov(0, 10) = Scalar(0.94999999999999996) * _tmp114 * states_cov(0, 10) +
                              Scalar(0.94999999999999996) * _tmp127 * states_cov(8, 10) +
                              Scalar(0.94999999999999996) * _tmp136 * states_cov(1, 10) +
                              Scalar(0.94999999999999996) * _tmp142 * states_cov(6, 10) +
                              Scalar(0.94999999999999996) * _tmp147 * states_cov(2, 10) +
                              Scalar(0.94999999999999996) * _tmp91 * states_cov(7, 10);
    _next_states_cov(1, 10) = Scalar(0.94999999999999996) * _tmp157 * states_cov(2, 10) +
                              Scalar(0.94999999999999996) * _tmp158 * states_cov(7, 10) +
                              Scalar(0.94999999999999996) * _tmp159 * states_cov(1, 10) +
                              Scalar(0.94999999999999996) * _tmp160 * states_cov(6, 10) +
                              Scalar(0.94999999999999996) * _tmp161 * states_cov(0, 10) +
                              Scalar(0.94999999999999996) * _tmp162 * states_cov(8, 10);
    _next_states_cov(2, 10) = Scalar(0.94999999999999996) * _tmp172 * states_cov(1, 10) +
                              Scalar(0.94999999999999996) * _tmp173 * states_cov(7, 10) +
                              Scalar(0.94999999999999996) * _tmp175 * states_cov(2, 10) +
                              Scalar(0.94999999999999996) * _tmp176 * states_cov(6, 10) +
                              Scalar(0.94999999999999996) * _tmp177 * states_cov(8, 10) +
                              Scalar(0.94999999999999996) * _tmp178 * states_cov(0, 10);
    _next_states_cov(3, 10) = Scalar(0.66500000000000004) * states_cov(3, 10);
    _next_states_cov(4, 10) = Scalar(0.66500000000000004) * states_cov(4, 10);
    _next_states_cov(5, 10) = Scalar(0.66500000000000004) * states_cov(5, 10);
    _next_states_cov(6, 10) = Scalar(0.94999999999999996) * states_cov(6, 10);
    _next_states_cov(7, 10) = Scalar(0.94999999999999996) * states_cov(7, 10);
    _next_states_cov(8, 10) = Scalar(0.94999999999999996) * states_cov(8, 10);
    _next_states_cov(9, 10) = Scalar(0.90249999999999997) * states_cov(9, 10);
    _next_states_cov(10, 10) =
        dt * mag_bias_noise(1, 0) + Scalar(0.90249999999999997) * states_cov(10, 10);
    _next_states_cov(11, 10) = Scalar(0.90249999999999997) * states_cov(11, 10);
    _next_states_cov(12, 10) = _tmp246 * states_cov(12, 10);
    _next_states_cov(13, 10) = _tmp246 * states_cov(13, 10);
    _next_states_cov(14, 10) = _tmp246 * states_cov(14, 10);
    _next_states_cov(0, 11) = Scalar(0.94999999999999996) * _tmp114 * states_cov(0, 11) +
                              Scalar(0.94999999999999996) * _tmp127 * states_cov(8, 11) +
                              Scalar(0.94999999999999996) * _tmp136 * states_cov(1, 11) +
                              Scalar(0.94999999999999996) * _tmp142 * states_cov(6, 11) +
                              Scalar(0.94999999999999996) * _tmp147 * states_cov(2, 11) +
                              Scalar(0.94999999999999996) * _tmp91 * states_cov(7, 11);
    _next_states_cov(1, 11) = Scalar(0.94999999999999996) * _tmp157 * states_cov(2, 11) +
                              Scalar(0.94999999999999996) * _tmp158 * states_cov(7, 11) +
                              Scalar(0.94999999999999996) * _tmp159 * states_cov(1, 11) +
                              Scalar(0.94999999999999996) * _tmp160 * states_cov(6, 11) +
                              Scalar(0.94999999999999996) * _tmp161 * states_cov(0, 11) +
                              Scalar(0.94999999999999996) * _tmp162 * states_cov(8, 11);
    _next_states_cov(2, 11) = Scalar(0.94999999999999996) * _tmp172 * states_cov(1, 11) +
                              Scalar(0.94999999999999996) * _tmp173 * states_cov(7, 11) +
                              Scalar(0.94999999999999996) * _tmp175 * states_cov(2, 11) +
                              Scalar(0.94999999999999996) * _tmp176 * states_cov(6, 11) +
                              Scalar(0.94999999999999996) * _tmp177 * states_cov(8, 11) +
                              Scalar(0.94999999999999996) * _tmp178 * states_cov(0, 11);
    _next_states_cov(3, 11) = Scalar(0.66500000000000004) * states_cov(3, 11);
    _next_states_cov(4, 11) = Scalar(0.66500000000000004) * states_cov(4, 11);
    _next_states_cov(5, 11) = Scalar(0.66500000000000004) * states_cov(5, 11);
    _next_states_cov(6, 11) = Scalar(0.94999999999999996) * states_cov(6, 11);
    _next_states_cov(7, 11) = Scalar(0.94999999999999996) * states_cov(7, 11);
    _next_states_cov(8, 11) = Scalar(0.94999999999999996) * states_cov(8, 11);
    _next_states_cov(9, 11) = Scalar(0.90249999999999997) * states_cov(9, 11);
    _next_states_cov(10, 11) = Scalar(0.90249999999999997) * states_cov(10, 11);
    _next_states_cov(11, 11) =
        dt * mag_bias_noise(2, 0) + Scalar(0.90249999999999997) * states_cov(11, 11);
    _next_states_cov(12, 11) = _tmp246 * states_cov(12, 11);
    _next_states_cov(13, 11) = _tmp246 * states_cov(13, 11);
    _next_states_cov(14, 11) = _tmp246 * states_cov(14, 11);
    _next_states_cov(0, 12) = _tmp213 * (_tmp114 * states_cov(0, 12) + _tmp127 * states_cov(8, 12) +
                                         _tmp136 * states_cov(1, 12) + _tmp142 * states_cov(6, 12) +
                                         _tmp147 * states_cov(2, 12) + _tmp91 * states_cov(7, 12));
    _next_states_cov(1, 12) = _tmp213 * (_tmp157 * states_cov(2, 12) + _tmp158 * states_cov(7, 12) +
                                         _tmp159 * states_cov(1, 12) + _tmp160 * states_cov(6, 12) +
                                         _tmp161 * states_cov(0, 12) + _tmp162 * states_cov(8, 12));
    _next_states_cov(2, 12) = _tmp213 * (_tmp172 * states_cov(1, 12) + _tmp173 * states_cov(7, 12) +
                                         _tmp175 * states_cov(2, 12) + _tmp176 * states_cov(6, 12) +
                                         _tmp177 * states_cov(8, 12) + _tmp178 * states_cov(0, 12));
    _next_states_cov(3, 12) = _tmp245 * states_cov(3, 12);
    _next_states_cov(4, 12) = _tmp245 * states_cov(4, 12);
    _next_states_cov(5, 12) = _tmp245 * states_cov(5, 12);
    _next_states_cov(6, 12) = _tmp213 * states_cov(6, 12);
    _next_states_cov(7, 12) = _tmp213 * states_cov(7, 12);
    _next_states_cov(8, 12) = _tmp213 * states_cov(8, 12);
    _next_states_cov(9, 12) = _tmp246 * states_cov(9, 12);
    _next_states_cov(10, 12) = _tmp246 * states_cov(10, 12);
    _next_states_cov(11, 12) = _tmp246 * states_cov(11, 12);
    _next_states_cov(12, 12) = _tmp247 * states_cov(12, 12);
    _next_states_cov(13, 12) = _tmp247 * states_cov(13, 12);
    _next_states_cov(14, 12) = _tmp247 * states_cov(14, 12);
    _next_states_cov(0, 13) = _tmp213 * (_tmp114 * states_cov(0, 13) + _tmp127 * states_cov(8, 13) +
                                         _tmp136 * states_cov(1, 13) + _tmp142 * states_cov(6, 13) +
                                         _tmp147 * states_cov(2, 13) + _tmp91 * states_cov(7, 13));
    _next_states_cov(1, 13) = _tmp213 * (_tmp157 * states_cov(2, 13) + _tmp158 * states_cov(7, 13) +
                                         _tmp159 * states_cov(1, 13) + _tmp160 * states_cov(6, 13) +
                                         _tmp161 * states_cov(0, 13) + _tmp162 * states_cov(8, 13));
    _next_states_cov(2, 13) = _tmp213 * (_tmp172 * states_cov(1, 13) + _tmp173 * states_cov(7, 13) +
                                         _tmp175 * states_cov(2, 13) + _tmp176 * states_cov(6, 13) +
                                         _tmp177 * states_cov(8, 13) + _tmp178 * states_cov(0, 13));
    _next_states_cov(3, 13) = _tmp245 * states_cov(3, 13);
    _next_states_cov(4, 13) = _tmp245 * states_cov(4, 13);
    _next_states_cov(5, 13) = _tmp245 * states_cov(5, 13);
    _next_states_cov(6, 13) = _tmp213 * states_cov(6, 13);
    _next_states_cov(7, 13) = _tmp213 * states_cov(7, 13);
    _next_states_cov(8, 13) = _tmp213 * states_cov(8, 13);
    _next_states_cov(9, 13) = _tmp246 * states_cov(9, 13);
    _next_states_cov(10, 13) = _tmp246 * states_cov(10, 13);
    _next_states_cov(11, 13) = _tmp246 * states_cov(11, 13);
    _next_states_cov(12, 13) = _tmp247 * states_cov(12, 13);
    _next_states_cov(13, 13) = _tmp247 * states_cov(13, 13);
    _next_states_cov(14, 13) = _tmp247 * states_cov(14, 13);
    _next_states_cov(0, 14) = _tmp213 * (_tmp114 * states_cov(0, 14) + _tmp127 * states_cov(8, 14) +
                                         _tmp136 * states_cov(1, 14) + _tmp142 * states_cov(6, 14) +
                                         _tmp147 * states_cov(2, 14) + _tmp91 * states_cov(7, 14));
    _next_states_cov(1, 14) = _tmp213 * (_tmp157 * states_cov(2, 14) + _tmp158 * states_cov(7, 14) +
                                         _tmp159 * states_cov(1, 14) + _tmp160 * states_cov(6, 14) +
                                         _tmp161 * states_cov(0, 14) + _tmp162 * states_cov(8, 14));
    _next_states_cov(2, 14) = _tmp213 * (_tmp172 * states_cov(1, 14) + _tmp173 * states_cov(7, 14) +
                                         _tmp175 * states_cov(2, 14) + _tmp176 * states_cov(6, 14) +
                                         _tmp177 * states_cov(8, 14) + _tmp178 * states_cov(0, 14));
    _next_states_cov(3, 14) = _tmp245 * states_cov(3, 14);
    _next_states_cov(4, 14) = _tmp245 * states_cov(4, 14);
    _next_states_cov(5, 14) = _tmp245 * states_cov(5, 14);
    _next_states_cov(6, 14) = _tmp213 * states_cov(6, 14);
    _next_states_cov(7, 14) = _tmp213 * states_cov(7, 14);
    _next_states_cov(8, 14) = _tmp213 * states_cov(8, 14);
    _next_states_cov(9, 14) = _tmp246 * states_cov(9, 14);
    _next_states_cov(10, 14) = _tmp246 * states_cov(10, 14);
    _next_states_cov(11, 14) = _tmp246 * states_cov(11, 14);
    _next_states_cov(12, 14) = _tmp247 * states_cov(12, 14);
    _next_states_cov(13, 14) = _tmp247 * states_cov(13, 14);
    _next_states_cov(14, 14) = _tmp247 * states_cov(14, 14);
  }
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
