// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     cpp_templates/function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>

namespace sym {

/**
 * This function was autogenerated. Do not modify by hand.
 *
 * Args:
 *     states: Matrix13_1
 *     states_cov: Matrix12_12
 *     gyro_body: Matrix31
 *     dt: Scalar
 *     gyro_noise: Matrix31
 *     accel_bias_noise: Matrix31
 *     gyro_bias_noise: Matrix31
 *     mag_bias_noise: Matrix31
 *
 * Outputs:
 *     next_states: Matrix13_1
 *     next_states_cov: Matrix12_12
 */
template <typename Scalar>
void AhrsProcess(const Eigen::Matrix<Scalar, 13, 1>& states,
                 const Eigen::Matrix<Scalar, 12, 12>& states_cov,
                 const Eigen::Matrix<Scalar, 3, 1>& gyro_body, const Scalar& dt,
                 const Eigen::Matrix<Scalar, 3, 1>& gyro_noise,
                 const Eigen::Matrix<Scalar, 3, 1>& accel_bias_noise,
                 const Eigen::Matrix<Scalar, 3, 1>& gyro_bias_noise,
                 const Eigen::Matrix<Scalar, 3, 1>& mag_bias_noise,
                 Eigen::Matrix<Scalar, 13, 1>* const next_states = nullptr,
                 Eigen::Matrix<Scalar, 12, 12>* const next_states_cov = nullptr) {
  // Total ops: 1216

  // Input arrays

  // Intermediate terms (187)
  const Scalar _tmp0 = gyro_body(0, 0) - states(4, 0);
  const Scalar _tmp1 = std::pow(dt, Scalar(2));
  const Scalar _tmp2 = std::pow(_tmp0, Scalar(2));
  const Scalar _tmp3 = gyro_body(2, 0) - states(6, 0);
  const Scalar _tmp4 = std::pow(_tmp3, Scalar(2));
  const Scalar _tmp5 = gyro_body(1, 0) - states(5, 0);
  const Scalar _tmp6 = std::pow(_tmp5, Scalar(2));
  const Scalar _tmp7 = _tmp1 * _tmp2 + _tmp1 * _tmp4 + _tmp1 * _tmp6;
  const Scalar _tmp8 = std::sqrt(_tmp7);
  const Scalar _tmp9 = (Scalar(1) / Scalar(2)) * _tmp8;
  const Scalar _tmp10 = std::sin(_tmp9);
  const Scalar _tmp11 = Scalar(1.0) / (_tmp8);
  const Scalar _tmp12 = _tmp11 * dt;
  const Scalar _tmp13 = _tmp10 * _tmp12;
  const Scalar _tmp14 = _tmp13 * states(3, 0);
  const Scalar _tmp15 = _tmp0 * _tmp14;
  const Scalar _tmp16 = _tmp13 * states(1, 0);
  const Scalar _tmp17 = _tmp16 * _tmp3;
  const Scalar _tmp18 = _tmp13 * states(2, 0);
  const Scalar _tmp19 = _tmp18 * _tmp5;
  const Scalar _tmp20 = std::cos(_tmp9);
  const Scalar _tmp21 = _tmp20 * states(0, 0);
  const Scalar _tmp22 = _tmp15 + _tmp17 - _tmp19 + _tmp21;
  const Scalar _tmp23 = _tmp10 * states(0, 0);
  const Scalar _tmp24 = _tmp12 * _tmp23;
  const Scalar _tmp25 = _tmp24 * _tmp3;
  const Scalar _tmp26 = _tmp14 * _tmp5;
  const Scalar _tmp27 = _tmp0 * _tmp18;
  const Scalar _tmp28 = _tmp20 * states(1, 0);
  const Scalar _tmp29 = -_tmp25 + _tmp26 + _tmp27 + _tmp28;
  const Scalar _tmp30 = _tmp24 * _tmp5;
  const Scalar _tmp31 = _tmp14 * _tmp3;
  const Scalar _tmp32 = _tmp0 * _tmp16;
  const Scalar _tmp33 = _tmp20 * states(2, 0);
  const Scalar _tmp34 = _tmp30 + _tmp31 - _tmp32 + _tmp33;
  const Scalar _tmp35 = _tmp0 * _tmp24;
  const Scalar _tmp36 = _tmp16 * _tmp5;
  const Scalar _tmp37 = _tmp18 * _tmp3;
  const Scalar _tmp38 = _tmp20 * states(3, 0);
  const Scalar _tmp39 = -_tmp35 - _tmp36 - _tmp37 + _tmp38;
  const Scalar _tmp40 = (Scalar(1) / Scalar(2)) * _tmp17;
  const Scalar _tmp41 = -_tmp40;
  const Scalar _tmp42 = (Scalar(1) / Scalar(2)) * _tmp21;
  const Scalar _tmp43 = (Scalar(1) / Scalar(2)) * _tmp15;
  const Scalar _tmp44 = -Scalar(1) / Scalar(2) * _tmp19;
  const Scalar _tmp45 = -_tmp43 + _tmp44;
  const Scalar _tmp46 = _tmp41 + _tmp42 + _tmp45;
  const Scalar _tmp47 = 2 * _tmp29;
  const Scalar _tmp48 = (Scalar(1) / Scalar(2)) * _tmp30;
  const Scalar _tmp49 = -_tmp48;
  const Scalar _tmp50 = (Scalar(1) / Scalar(2)) * _tmp31;
  const Scalar _tmp51 = -Scalar(1) / Scalar(2) * _tmp32;
  const Scalar _tmp52 = (Scalar(1) / Scalar(2)) * _tmp33;
  const Scalar _tmp53 = -_tmp52;
  const Scalar _tmp54 = _tmp49 + _tmp50 + _tmp51 + _tmp53;
  const Scalar _tmp55 = 2 * _tmp39;
  const Scalar _tmp56 = (Scalar(1) / Scalar(2)) * _tmp36;
  const Scalar _tmp57 = (Scalar(1) / Scalar(2)) * _tmp37;
  const Scalar _tmp58 = (Scalar(1) / Scalar(2)) * _tmp35;
  const Scalar _tmp59 = (Scalar(1) / Scalar(2)) * _tmp38;
  const Scalar _tmp60 = _tmp58 + _tmp59;
  const Scalar _tmp61 = -_tmp56 + _tmp57 + _tmp60;
  const Scalar _tmp62 = 2 * _tmp34;
  const Scalar _tmp63 = (Scalar(1) / Scalar(2)) * _tmp27;
  const Scalar _tmp64 = (Scalar(1) / Scalar(2)) * _tmp28;
  const Scalar _tmp65 = -_tmp64;
  const Scalar _tmp66 = -Scalar(1) / Scalar(2) * _tmp25;
  const Scalar _tmp67 = (Scalar(1) / Scalar(2)) * _tmp26;
  const Scalar _tmp68 = _tmp66 - _tmp67;
  const Scalar _tmp69 = _tmp63 + _tmp65 + _tmp68;
  const Scalar _tmp70 = 2 * _tmp22;
  const Scalar _tmp71 = -_tmp46 * _tmp47 + _tmp54 * _tmp55 + _tmp61 * _tmp62 - _tmp69 * _tmp70;
  const Scalar _tmp72 = [&]() {
    const Scalar base = dt;
    return base * base * base;
  }();
  const Scalar _tmp73 = _tmp72 / (_tmp7 * std::sqrt(_tmp7));
  const Scalar _tmp74 = _tmp23 * _tmp73;
  const Scalar _tmp75 = _tmp5 * _tmp74;
  const Scalar _tmp76 = _tmp0 * _tmp75;
  const Scalar _tmp77 = _tmp72 / _tmp7;
  const Scalar _tmp78 = _tmp64 * _tmp77;
  const Scalar _tmp79 = _tmp10 * states(1, 0);
  const Scalar _tmp80 = _tmp73 * _tmp79;
  const Scalar _tmp81 = _tmp10 * states(3, 0);
  const Scalar _tmp82 = (Scalar(1) / Scalar(2)) * _tmp1 * _tmp11;
  const Scalar _tmp83 = _tmp81 * _tmp82;
  const Scalar _tmp84 = _tmp42 * _tmp77;
  const Scalar _tmp85 = _tmp5 * _tmp84;
  const Scalar _tmp86 = _tmp0 * _tmp85;
  const Scalar _tmp87 = _tmp52 * _tmp77;
  const Scalar _tmp88 = _tmp5 * _tmp87;
  const Scalar _tmp89 = _tmp10 * states(2, 0);
  const Scalar _tmp90 = _tmp73 * _tmp89;
  const Scalar _tmp91 = _tmp5 * _tmp90;
  const Scalar _tmp92 = _tmp3 * _tmp88 - _tmp3 * _tmp91;
  const Scalar _tmp93 =
      _tmp16 + _tmp5 * _tmp83 + _tmp6 * _tmp78 - _tmp6 * _tmp80 - _tmp76 + _tmp86 + _tmp92;
  const Scalar _tmp94 = _tmp82 * _tmp89;
  const Scalar _tmp95 = _tmp59 * _tmp77;
  const Scalar _tmp96 = _tmp5 * _tmp95;
  const Scalar _tmp97 = _tmp73 * _tmp81;
  const Scalar _tmp98 = _tmp5 * _tmp97;
  const Scalar _tmp99 = -_tmp3 * _tmp96 + _tmp3 * _tmp98;
  const Scalar _tmp100 = _tmp5 * _tmp80;
  const Scalar _tmp101 = _tmp5 * _tmp78;
  const Scalar _tmp102 = -_tmp0 * _tmp100 + _tmp0 * _tmp101;
  const Scalar _tmp103 =
      _tmp102 - _tmp24 + _tmp5 * _tmp94 + _tmp6 * _tmp74 - _tmp6 * _tmp84 + _tmp99;
  const Scalar _tmp104 = -_tmp14;
  const Scalar _tmp105 = _tmp3 * _tmp75;
  const Scalar _tmp106 = _tmp0 * _tmp88;
  const Scalar _tmp107 = _tmp0 * _tmp91;
  const Scalar _tmp108 = _tmp79 * _tmp82;
  const Scalar _tmp109 = _tmp3 * _tmp85;
  const Scalar _tmp110 = _tmp104 - _tmp105 - _tmp106 + _tmp107 + _tmp108 * _tmp5 + _tmp109 -
                         _tmp6 * _tmp95 + _tmp6 * _tmp97;
  const Scalar _tmp111 = _tmp100 * _tmp3;
  const Scalar _tmp112 = _tmp101 * _tmp3;
  const Scalar _tmp113 = _tmp23 * _tmp82;
  const Scalar _tmp114 = -_tmp0 * _tmp96 + _tmp0 * _tmp98;
  const Scalar _tmp115 =
      _tmp111 - _tmp112 + _tmp113 * _tmp5 + _tmp114 + _tmp18 + _tmp6 * _tmp87 - _tmp6 * _tmp90;
  const Scalar _tmp116 = -_tmp103 * _tmp47 + _tmp110 * _tmp62 + _tmp115 * _tmp55 - _tmp70 * _tmp93;
  const Scalar _tmp117 = _tmp56 - _tmp57 + _tmp60;
  const Scalar _tmp118 = -_tmp42;
  const Scalar _tmp119 = _tmp118 + _tmp41 + _tmp43 + _tmp44;
  const Scalar _tmp120 = -_tmp50 + _tmp51;
  const Scalar _tmp121 = _tmp120 + _tmp48 + _tmp53;
  const Scalar _tmp122 = -_tmp63;
  const Scalar _tmp123 = _tmp122 + _tmp64 + _tmp68;
  const Scalar _tmp124 = -_tmp117 * _tmp47 + _tmp119 * _tmp62 - _tmp121 * _tmp70 + _tmp123 * _tmp55;
  const Scalar _tmp125 = _tmp0 * _tmp3;
  const Scalar _tmp126 = -_tmp125 * _tmp95 + _tmp125 * _tmp97;
  const Scalar _tmp127 =
      _tmp0 * _tmp94 + _tmp126 + _tmp16 + _tmp2 * _tmp78 - _tmp2 * _tmp80 + _tmp76 - _tmp86;
  const Scalar _tmp128 = _tmp125 * _tmp80;
  const Scalar _tmp129 = _tmp125 * _tmp78;
  const Scalar _tmp130 = _tmp0 * _tmp113 + _tmp104 + _tmp106 - _tmp107 + _tmp128 - _tmp129 -
                         _tmp2 * _tmp95 + _tmp2 * _tmp97;
  const Scalar _tmp131 = _tmp125 * _tmp87;
  const Scalar _tmp132 = _tmp125 * _tmp90;
  const Scalar _tmp133 =
      _tmp0 * _tmp83 + _tmp102 + _tmp131 - _tmp132 - _tmp2 * _tmp74 + _tmp2 * _tmp84 + _tmp24;
  const Scalar _tmp134 = -_tmp125 * _tmp74 + _tmp125 * _tmp84;
  const Scalar _tmp135 =
      _tmp0 * _tmp108 + _tmp114 + _tmp134 - _tmp18 - _tmp2 * _tmp87 + _tmp2 * _tmp90;
  const Scalar _tmp136 = -_tmp127 * _tmp47 + _tmp130 * _tmp55 - _tmp133 * _tmp70 + _tmp135 * _tmp62;
  const Scalar _tmp137 = _tmp4 * _tmp73;
  const Scalar _tmp138 =
      _tmp108 * _tmp3 - _tmp131 + _tmp132 - _tmp137 * _tmp23 + _tmp24 + _tmp4 * _tmp84 + _tmp99;
  const Scalar _tmp139 =
      -_tmp111 + _tmp112 + _tmp134 - _tmp137 * _tmp89 + _tmp18 + _tmp3 * _tmp83 + _tmp4 * _tmp87;
  const Scalar _tmp140 =
      _tmp113 * _tmp3 + _tmp126 + _tmp137 * _tmp79 - _tmp16 - _tmp4 * _tmp78 + _tmp92;
  const Scalar _tmp141 = _tmp104 + _tmp105 - _tmp109 - _tmp128 + _tmp129 + _tmp137 * _tmp81 +
                         _tmp3 * _tmp94 - _tmp4 * _tmp95;
  const Scalar _tmp142 = _tmp138 * _tmp62 - _tmp139 * _tmp70 + _tmp140 * _tmp55 - _tmp141 * _tmp47;
  const Scalar _tmp143 = _tmp56 + _tmp57 - _tmp58 + _tmp59;
  const Scalar _tmp144 = _tmp122 + _tmp65 + _tmp66 + _tmp67;
  const Scalar _tmp145 = _tmp120 + _tmp49 + _tmp52;
  const Scalar _tmp146 = _tmp118 + _tmp40 + _tmp45;
  const Scalar _tmp147 = _tmp143 * _tmp55 - _tmp144 * _tmp47 + _tmp145 * _tmp62 - _tmp146 * _tmp70;
  const Scalar _tmp148 = _tmp116 * states_cov(4, 2) + _tmp124 * states_cov(2, 2) +
                         _tmp136 * states_cov(3, 2) + _tmp142 * states_cov(5, 2) +
                         _tmp147 * states_cov(0, 2) + _tmp71 * states_cov(1, 2);
  const Scalar _tmp149 = _tmp136 * states_cov(3, 3);
  const Scalar _tmp150 = _tmp116 * states_cov(4, 3) + _tmp124 * states_cov(2, 3) +
                         _tmp142 * states_cov(5, 3) + _tmp147 * states_cov(0, 3) + _tmp149 +
                         _tmp71 * states_cov(1, 3);
  const Scalar _tmp151 = _tmp142 * states_cov(5, 5);
  const Scalar _tmp152 = _tmp116 * states_cov(4, 5) + _tmp124 * states_cov(2, 5) +
                         _tmp136 * states_cov(3, 5) + _tmp147 * states_cov(0, 5) + _tmp151 +
                         _tmp71 * states_cov(1, 5);
  const Scalar _tmp153 = _tmp116 * states_cov(4, 0) + _tmp124 * states_cov(2, 0) +
                         _tmp136 * states_cov(3, 0) + _tmp142 * states_cov(5, 0) +
                         _tmp147 * states_cov(0, 0) + _tmp71 * states_cov(1, 0);
  const Scalar _tmp154 = _tmp116 * states_cov(4, 1) + _tmp124 * states_cov(2, 1) +
                         _tmp136 * states_cov(3, 1) + _tmp142 * states_cov(5, 1) +
                         _tmp147 * states_cov(0, 1) + _tmp71 * states_cov(1, 1);
  const Scalar _tmp155 = _tmp116 * states_cov(4, 4);
  const Scalar _tmp156 = _tmp124 * states_cov(2, 4) + _tmp136 * states_cov(3, 4) +
                         _tmp142 * states_cov(5, 4) + _tmp147 * states_cov(0, 4) + _tmp155 +
                         _tmp71 * states_cov(1, 4);
  const Scalar _tmp157 = _tmp103 * _tmp70 + _tmp110 * _tmp55 - _tmp115 * _tmp62 - _tmp47 * _tmp93;
  const Scalar _tmp158 = _tmp138 * _tmp55 - _tmp139 * _tmp47 - _tmp140 * _tmp62 + _tmp141 * _tmp70;
  const Scalar _tmp159 = -_tmp143 * _tmp62 + _tmp144 * _tmp70 + _tmp145 * _tmp55 - _tmp146 * _tmp47;
  const Scalar _tmp160 = _tmp117 * _tmp70 + _tmp119 * _tmp55 - _tmp121 * _tmp47 - _tmp123 * _tmp62;
  const Scalar _tmp161 = _tmp127 * _tmp70 - _tmp130 * _tmp62 - _tmp133 * _tmp47 + _tmp135 * _tmp55;
  const Scalar _tmp162 = _tmp46 * _tmp70 - _tmp47 * _tmp69 - _tmp54 * _tmp62 + _tmp55 * _tmp61;
  const Scalar _tmp163 = _tmp157 * states_cov(4, 0) + _tmp158 * states_cov(5, 0) +
                         _tmp159 * states_cov(0, 0) + _tmp160 * states_cov(2, 0) +
                         _tmp161 * states_cov(3, 0) + _tmp162 * states_cov(1, 0);
  const Scalar _tmp164 = _tmp157 * states_cov(4, 1) + _tmp158 * states_cov(5, 1) +
                         _tmp159 * states_cov(0, 1) + _tmp160 * states_cov(2, 1) +
                         _tmp161 * states_cov(3, 1) + _tmp162 * states_cov(1, 1);
  const Scalar _tmp165 = _tmp157 * states_cov(4, 4);
  const Scalar _tmp166 = _tmp158 * states_cov(5, 4) + _tmp159 * states_cov(0, 4) +
                         _tmp160 * states_cov(2, 4) + _tmp161 * states_cov(3, 4) +
                         _tmp162 * states_cov(1, 4) + _tmp165;
  const Scalar _tmp167 = _tmp158 * states_cov(5, 5);
  const Scalar _tmp168 = _tmp157 * states_cov(4, 5) + _tmp159 * states_cov(0, 5) +
                         _tmp160 * states_cov(2, 5) + _tmp161 * states_cov(3, 5) +
                         _tmp162 * states_cov(1, 5) + _tmp167;
  const Scalar _tmp169 = _tmp161 * states_cov(3, 3);
  const Scalar _tmp170 = _tmp157 * states_cov(4, 3) + _tmp158 * states_cov(5, 3) +
                         _tmp159 * states_cov(0, 3) + _tmp160 * states_cov(2, 3) +
                         _tmp162 * states_cov(1, 3) + _tmp169;
  const Scalar _tmp171 = _tmp157 * states_cov(4, 2) + _tmp158 * states_cov(5, 2) +
                         _tmp159 * states_cov(0, 2) + _tmp160 * states_cov(2, 2) +
                         _tmp161 * states_cov(3, 2) + _tmp162 * states_cov(1, 2);
  const Scalar _tmp172 = _tmp103 * _tmp55 - _tmp110 * _tmp70 + _tmp115 * _tmp47 - _tmp62 * _tmp93;
  const Scalar _tmp173 = _tmp172 * states_cov(4, 4);
  const Scalar _tmp174 = _tmp127 * _tmp55 + _tmp130 * _tmp47 - _tmp133 * _tmp62 - _tmp135 * _tmp70;
  const Scalar _tmp175 = -_tmp138 * _tmp70 - _tmp139 * _tmp62 + _tmp140 * _tmp47 + _tmp141 * _tmp55;
  const Scalar _tmp176 = _tmp143 * _tmp47 + _tmp144 * _tmp55 - _tmp145 * _tmp70 - _tmp146 * _tmp62;
  const Scalar _tmp177 = _tmp46 * _tmp55 + _tmp47 * _tmp54 - _tmp61 * _tmp70 - _tmp62 * _tmp69;
  const Scalar _tmp178 = _tmp117 * _tmp55 - _tmp119 * _tmp70 - _tmp121 * _tmp62 + _tmp123 * _tmp47;
  const Scalar _tmp179 = _tmp173 + _tmp174 * states_cov(3, 4) + _tmp175 * states_cov(5, 4) +
                         _tmp176 * states_cov(0, 4) + _tmp177 * states_cov(1, 4) +
                         _tmp178 * states_cov(2, 4);
  const Scalar _tmp180 = _tmp175 * states_cov(5, 5);
  const Scalar _tmp181 = _tmp172 * states_cov(4, 5) + _tmp174 * states_cov(3, 5) +
                         _tmp176 * states_cov(0, 5) + _tmp177 * states_cov(1, 5) +
                         _tmp178 * states_cov(2, 5) + _tmp180;
  const Scalar _tmp182 = _tmp174 * states_cov(3, 3);
  const Scalar _tmp183 = _tmp172 * states_cov(4, 3) + _tmp175 * states_cov(5, 3) +
                         _tmp176 * states_cov(0, 3) + _tmp177 * states_cov(1, 3) +
                         _tmp178 * states_cov(2, 3) + _tmp182;
  const Scalar _tmp184 = _tmp172 * states_cov(4, 0) + _tmp174 * states_cov(3, 0) +
                         _tmp175 * states_cov(5, 0) + _tmp176 * states_cov(0, 0) +
                         _tmp177 * states_cov(1, 0) + _tmp178 * states_cov(2, 0);
  const Scalar _tmp185 = _tmp172 * states_cov(4, 2) + _tmp174 * states_cov(3, 2) +
                         _tmp175 * states_cov(5, 2) + _tmp176 * states_cov(0, 2) +
                         _tmp177 * states_cov(1, 2) + _tmp178 * states_cov(2, 2);
  const Scalar _tmp186 = _tmp172 * states_cov(4, 1) + _tmp174 * states_cov(3, 1) +
                         _tmp175 * states_cov(5, 1) + _tmp176 * states_cov(0, 1) +
                         _tmp177 * states_cov(1, 1) + _tmp178 * states_cov(2, 1);

  // Output terms (2)
  if (next_states != nullptr) {
    Eigen::Matrix<Scalar, 13, 1>& _next_states = (*next_states);

    _next_states(0, 0) = _tmp22;
    _next_states(1, 0) = _tmp29;
    _next_states(2, 0) = _tmp34;
    _next_states(3, 0) = _tmp39;
    _next_states(4, 0) = states(7, 0);
    _next_states(5, 0) = states(8, 0);
    _next_states(6, 0) = states(9, 0);
    _next_states(7, 0) = states(4, 0);
    _next_states(8, 0) = states(5, 0);
    _next_states(9, 0) = states(6, 0);
    _next_states(10, 0) = states(10, 0);
    _next_states(11, 0) = states(11, 0);
    _next_states(12, 0) = states(12, 0);
  }

  if (next_states_cov != nullptr) {
    Eigen::Matrix<Scalar, 12, 12>& _next_states_cov = (*next_states_cov);

    _next_states_cov(0, 0) = _tmp116 * _tmp156 + _tmp124 * _tmp148 + _tmp136 * _tmp150 +
                             _tmp142 * _tmp152 + _tmp147 * _tmp153 + _tmp154 * _tmp71 +
                             dt * gyro_noise(0, 0);
    _next_states_cov(1, 0) = _tmp116 * _tmp166 + _tmp124 * _tmp171 + _tmp136 * _tmp170 +
                             _tmp142 * _tmp168 + _tmp147 * _tmp163 + _tmp164 * _tmp71;
    _next_states_cov(2, 0) = _tmp116 * _tmp179 + _tmp124 * _tmp185 + _tmp136 * _tmp183 +
                             _tmp142 * _tmp181 + _tmp147 * _tmp184 + _tmp186 * _tmp71;
    _next_states_cov(3, 0) = _tmp116 * states_cov(6, 4) + _tmp124 * states_cov(6, 2) +
                             _tmp136 * states_cov(6, 3) + _tmp142 * states_cov(6, 5) +
                             _tmp147 * states_cov(6, 0) + _tmp71 * states_cov(6, 1);
    _next_states_cov(4, 0) = _tmp116 * states_cov(7, 4) + _tmp124 * states_cov(7, 2) +
                             _tmp136 * states_cov(7, 3) + _tmp142 * states_cov(7, 5) +
                             _tmp147 * states_cov(7, 0) + _tmp71 * states_cov(7, 1);
    _next_states_cov(5, 0) = _tmp116 * states_cov(8, 4) + _tmp124 * states_cov(8, 2) +
                             _tmp136 * states_cov(8, 3) + _tmp142 * states_cov(8, 5) +
                             _tmp147 * states_cov(8, 0) + _tmp71 * states_cov(8, 1);
    _next_states_cov(6, 0) = _tmp116 * states_cov(3, 4) + _tmp124 * states_cov(3, 2) +
                             _tmp142 * states_cov(3, 5) + _tmp147 * states_cov(3, 0) + _tmp149 +
                             _tmp71 * states_cov(3, 1);
    _next_states_cov(7, 0) = _tmp124 * states_cov(4, 2) + _tmp136 * states_cov(4, 3) +
                             _tmp142 * states_cov(4, 5) + _tmp147 * states_cov(4, 0) + _tmp155 +
                             _tmp71 * states_cov(4, 1);
    _next_states_cov(8, 0) = _tmp116 * states_cov(5, 4) + _tmp124 * states_cov(5, 2) +
                             _tmp136 * states_cov(5, 3) + _tmp147 * states_cov(5, 0) + _tmp151 +
                             _tmp71 * states_cov(5, 1);
    _next_states_cov(9, 0) = _tmp116 * states_cov(9, 4) + _tmp124 * states_cov(9, 2) +
                             _tmp136 * states_cov(9, 3) + _tmp142 * states_cov(9, 5) +
                             _tmp147 * states_cov(9, 0) + _tmp71 * states_cov(9, 1);
    _next_states_cov(10, 0) = _tmp116 * states_cov(10, 4) + _tmp124 * states_cov(10, 2) +
                              _tmp136 * states_cov(10, 3) + _tmp142 * states_cov(10, 5) +
                              _tmp147 * states_cov(10, 0) + _tmp71 * states_cov(10, 1);
    _next_states_cov(11, 0) = _tmp116 * states_cov(11, 4) + _tmp124 * states_cov(11, 2) +
                              _tmp136 * states_cov(11, 3) + _tmp142 * states_cov(11, 5) +
                              _tmp147 * states_cov(11, 0) + _tmp71 * states_cov(11, 1);
    _next_states_cov(0, 1) = _tmp148 * _tmp160 + _tmp150 * _tmp161 + _tmp152 * _tmp158 +
                             _tmp153 * _tmp159 + _tmp154 * _tmp162 + _tmp156 * _tmp157;
    _next_states_cov(1, 1) = _tmp157 * _tmp166 + _tmp158 * _tmp168 + _tmp159 * _tmp163 +
                             _tmp160 * _tmp171 + _tmp161 * _tmp170 + _tmp162 * _tmp164 +
                             dt * gyro_noise(1, 0);
    _next_states_cov(2, 1) = _tmp157 * _tmp179 + _tmp158 * _tmp181 + _tmp159 * _tmp184 +
                             _tmp160 * _tmp185 + _tmp161 * _tmp183 + _tmp162 * _tmp186;
    _next_states_cov(3, 1) = _tmp157 * states_cov(6, 4) + _tmp158 * states_cov(6, 5) +
                             _tmp159 * states_cov(6, 0) + _tmp160 * states_cov(6, 2) +
                             _tmp161 * states_cov(6, 3) + _tmp162 * states_cov(6, 1);
    _next_states_cov(4, 1) = _tmp157 * states_cov(7, 4) + _tmp158 * states_cov(7, 5) +
                             _tmp159 * states_cov(7, 0) + _tmp160 * states_cov(7, 2) +
                             _tmp161 * states_cov(7, 3) + _tmp162 * states_cov(7, 1);
    _next_states_cov(5, 1) = _tmp157 * states_cov(8, 4) + _tmp158 * states_cov(8, 5) +
                             _tmp159 * states_cov(8, 0) + _tmp160 * states_cov(8, 2) +
                             _tmp161 * states_cov(8, 3) + _tmp162 * states_cov(8, 1);
    _next_states_cov(6, 1) = _tmp157 * states_cov(3, 4) + _tmp158 * states_cov(3, 5) +
                             _tmp159 * states_cov(3, 0) + _tmp160 * states_cov(3, 2) +
                             _tmp162 * states_cov(3, 1) + _tmp169;
    _next_states_cov(7, 1) = _tmp158 * states_cov(4, 5) + _tmp159 * states_cov(4, 0) +
                             _tmp160 * states_cov(4, 2) + _tmp161 * states_cov(4, 3) +
                             _tmp162 * states_cov(4, 1) + _tmp165;
    _next_states_cov(8, 1) = _tmp157 * states_cov(5, 4) + _tmp159 * states_cov(5, 0) +
                             _tmp160 * states_cov(5, 2) + _tmp161 * states_cov(5, 3) +
                             _tmp162 * states_cov(5, 1) + _tmp167;
    _next_states_cov(9, 1) = _tmp157 * states_cov(9, 4) + _tmp158 * states_cov(9, 5) +
                             _tmp159 * states_cov(9, 0) + _tmp160 * states_cov(9, 2) +
                             _tmp161 * states_cov(9, 3) + _tmp162 * states_cov(9, 1);
    _next_states_cov(10, 1) = _tmp157 * states_cov(10, 4) + _tmp158 * states_cov(10, 5) +
                              _tmp159 * states_cov(10, 0) + _tmp160 * states_cov(10, 2) +
                              _tmp161 * states_cov(10, 3) + _tmp162 * states_cov(10, 1);
    _next_states_cov(11, 1) = _tmp157 * states_cov(11, 4) + _tmp158 * states_cov(11, 5) +
                              _tmp159 * states_cov(11, 0) + _tmp160 * states_cov(11, 2) +
                              _tmp161 * states_cov(11, 3) + _tmp162 * states_cov(11, 1);
    _next_states_cov(0, 2) = _tmp148 * _tmp178 + _tmp150 * _tmp174 + _tmp152 * _tmp175 +
                             _tmp153 * _tmp176 + _tmp154 * _tmp177 + _tmp156 * _tmp172;
    _next_states_cov(1, 2) = _tmp163 * _tmp176 + _tmp164 * _tmp177 + _tmp166 * _tmp172 +
                             _tmp168 * _tmp175 + _tmp170 * _tmp174 + _tmp171 * _tmp178;
    _next_states_cov(2, 2) = _tmp172 * _tmp179 + _tmp174 * _tmp183 + _tmp175 * _tmp181 +
                             _tmp176 * _tmp184 + _tmp177 * _tmp186 + _tmp178 * _tmp185 +
                             dt * gyro_noise(2, 0);
    _next_states_cov(3, 2) = _tmp172 * states_cov(6, 4) + _tmp174 * states_cov(6, 3) +
                             _tmp175 * states_cov(6, 5) + _tmp176 * states_cov(6, 0) +
                             _tmp177 * states_cov(6, 1) + _tmp178 * states_cov(6, 2);
    _next_states_cov(4, 2) = _tmp172 * states_cov(7, 4) + _tmp174 * states_cov(7, 3) +
                             _tmp175 * states_cov(7, 5) + _tmp176 * states_cov(7, 0) +
                             _tmp177 * states_cov(7, 1) + _tmp178 * states_cov(7, 2);
    _next_states_cov(5, 2) = _tmp172 * states_cov(8, 4) + _tmp174 * states_cov(8, 3) +
                             _tmp175 * states_cov(8, 5) + _tmp176 * states_cov(8, 0) +
                             _tmp177 * states_cov(8, 1) + _tmp178 * states_cov(8, 2);
    _next_states_cov(6, 2) = _tmp172 * states_cov(3, 4) + _tmp175 * states_cov(3, 5) +
                             _tmp176 * states_cov(3, 0) + _tmp177 * states_cov(3, 1) +
                             _tmp178 * states_cov(3, 2) + _tmp182;
    _next_states_cov(7, 2) = _tmp173 + _tmp174 * states_cov(4, 3) + _tmp175 * states_cov(4, 5) +
                             _tmp176 * states_cov(4, 0) + _tmp177 * states_cov(4, 1) +
                             _tmp178 * states_cov(4, 2);
    _next_states_cov(8, 2) = _tmp172 * states_cov(5, 4) + _tmp174 * states_cov(5, 3) +
                             _tmp176 * states_cov(5, 0) + _tmp177 * states_cov(5, 1) +
                             _tmp178 * states_cov(5, 2) + _tmp180;
    _next_states_cov(9, 2) = _tmp172 * states_cov(9, 4) + _tmp174 * states_cov(9, 3) +
                             _tmp175 * states_cov(9, 5) + _tmp176 * states_cov(9, 0) +
                             _tmp177 * states_cov(9, 1) + _tmp178 * states_cov(9, 2);
    _next_states_cov(10, 2) = _tmp172 * states_cov(10, 4) + _tmp174 * states_cov(10, 3) +
                              _tmp175 * states_cov(10, 5) + _tmp176 * states_cov(10, 0) +
                              _tmp177 * states_cov(10, 1) + _tmp178 * states_cov(10, 2);
    _next_states_cov(11, 2) = _tmp172 * states_cov(11, 4) + _tmp174 * states_cov(11, 3) +
                              _tmp175 * states_cov(11, 5) + _tmp176 * states_cov(11, 0) +
                              _tmp177 * states_cov(11, 1) + _tmp178 * states_cov(11, 2);
    _next_states_cov(0, 3) = _tmp116 * states_cov(4, 6) + _tmp124 * states_cov(2, 6) +
                             _tmp136 * states_cov(3, 6) + _tmp142 * states_cov(5, 6) +
                             _tmp147 * states_cov(0, 6) + _tmp71 * states_cov(1, 6);
    _next_states_cov(1, 3) = _tmp157 * states_cov(4, 6) + _tmp158 * states_cov(5, 6) +
                             _tmp159 * states_cov(0, 6) + _tmp160 * states_cov(2, 6) +
                             _tmp161 * states_cov(3, 6) + _tmp162 * states_cov(1, 6);
    _next_states_cov(2, 3) = _tmp172 * states_cov(4, 6) + _tmp174 * states_cov(3, 6) +
                             _tmp175 * states_cov(5, 6) + _tmp176 * states_cov(0, 6) +
                             _tmp177 * states_cov(1, 6) + _tmp178 * states_cov(2, 6);
    _next_states_cov(3, 3) = accel_bias_noise(0, 0) * dt + states_cov(6, 6);
    _next_states_cov(4, 3) = states_cov(7, 6);
    _next_states_cov(5, 3) = states_cov(8, 6);
    _next_states_cov(6, 3) = states_cov(3, 6);
    _next_states_cov(7, 3) = states_cov(4, 6);
    _next_states_cov(8, 3) = states_cov(5, 6);
    _next_states_cov(9, 3) = states_cov(9, 6);
    _next_states_cov(10, 3) = states_cov(10, 6);
    _next_states_cov(11, 3) = states_cov(11, 6);
    _next_states_cov(0, 4) = _tmp116 * states_cov(4, 7) + _tmp124 * states_cov(2, 7) +
                             _tmp136 * states_cov(3, 7) + _tmp142 * states_cov(5, 7) +
                             _tmp147 * states_cov(0, 7) + _tmp71 * states_cov(1, 7);
    _next_states_cov(1, 4) = _tmp157 * states_cov(4, 7) + _tmp158 * states_cov(5, 7) +
                             _tmp159 * states_cov(0, 7) + _tmp160 * states_cov(2, 7) +
                             _tmp161 * states_cov(3, 7) + _tmp162 * states_cov(1, 7);
    _next_states_cov(2, 4) = _tmp172 * states_cov(4, 7) + _tmp174 * states_cov(3, 7) +
                             _tmp175 * states_cov(5, 7) + _tmp176 * states_cov(0, 7) +
                             _tmp177 * states_cov(1, 7) + _tmp178 * states_cov(2, 7);
    _next_states_cov(3, 4) = states_cov(6, 7);
    _next_states_cov(4, 4) = accel_bias_noise(1, 0) * dt + states_cov(7, 7);
    _next_states_cov(5, 4) = states_cov(8, 7);
    _next_states_cov(6, 4) = states_cov(3, 7);
    _next_states_cov(7, 4) = states_cov(4, 7);
    _next_states_cov(8, 4) = states_cov(5, 7);
    _next_states_cov(9, 4) = states_cov(9, 7);
    _next_states_cov(10, 4) = states_cov(10, 7);
    _next_states_cov(11, 4) = states_cov(11, 7);
    _next_states_cov(0, 5) = _tmp116 * states_cov(4, 8) + _tmp124 * states_cov(2, 8) +
                             _tmp136 * states_cov(3, 8) + _tmp142 * states_cov(5, 8) +
                             _tmp147 * states_cov(0, 8) + _tmp71 * states_cov(1, 8);
    _next_states_cov(1, 5) = _tmp157 * states_cov(4, 8) + _tmp158 * states_cov(5, 8) +
                             _tmp159 * states_cov(0, 8) + _tmp160 * states_cov(2, 8) +
                             _tmp161 * states_cov(3, 8) + _tmp162 * states_cov(1, 8);
    _next_states_cov(2, 5) = _tmp172 * states_cov(4, 8) + _tmp174 * states_cov(3, 8) +
                             _tmp175 * states_cov(5, 8) + _tmp176 * states_cov(0, 8) +
                             _tmp177 * states_cov(1, 8) + _tmp178 * states_cov(2, 8);
    _next_states_cov(3, 5) = states_cov(6, 8);
    _next_states_cov(4, 5) = states_cov(7, 8);
    _next_states_cov(5, 5) = accel_bias_noise(2, 0) * dt + states_cov(8, 8);
    _next_states_cov(6, 5) = states_cov(3, 8);
    _next_states_cov(7, 5) = states_cov(4, 8);
    _next_states_cov(8, 5) = states_cov(5, 8);
    _next_states_cov(9, 5) = states_cov(9, 8);
    _next_states_cov(10, 5) = states_cov(10, 8);
    _next_states_cov(11, 5) = states_cov(11, 8);
    _next_states_cov(0, 6) = _tmp150;
    _next_states_cov(1, 6) = _tmp170;
    _next_states_cov(2, 6) = _tmp183;
    _next_states_cov(3, 6) = states_cov(6, 3);
    _next_states_cov(4, 6) = states_cov(7, 3);
    _next_states_cov(5, 6) = states_cov(8, 3);
    _next_states_cov(6, 6) = dt * gyro_bias_noise(0, 0) + states_cov(3, 3);
    _next_states_cov(7, 6) = states_cov(4, 3);
    _next_states_cov(8, 6) = states_cov(5, 3);
    _next_states_cov(9, 6) = states_cov(9, 3);
    _next_states_cov(10, 6) = states_cov(10, 3);
    _next_states_cov(11, 6) = states_cov(11, 3);
    _next_states_cov(0, 7) = _tmp156;
    _next_states_cov(1, 7) = _tmp166;
    _next_states_cov(2, 7) = _tmp179;
    _next_states_cov(3, 7) = states_cov(6, 4);
    _next_states_cov(4, 7) = states_cov(7, 4);
    _next_states_cov(5, 7) = states_cov(8, 4);
    _next_states_cov(6, 7) = states_cov(3, 4);
    _next_states_cov(7, 7) = dt * gyro_bias_noise(1, 0) + states_cov(4, 4);
    _next_states_cov(8, 7) = states_cov(5, 4);
    _next_states_cov(9, 7) = states_cov(9, 4);
    _next_states_cov(10, 7) = states_cov(10, 4);
    _next_states_cov(11, 7) = states_cov(11, 4);
    _next_states_cov(0, 8) = _tmp152;
    _next_states_cov(1, 8) = _tmp168;
    _next_states_cov(2, 8) = _tmp181;
    _next_states_cov(3, 8) = states_cov(6, 5);
    _next_states_cov(4, 8) = states_cov(7, 5);
    _next_states_cov(5, 8) = states_cov(8, 5);
    _next_states_cov(6, 8) = states_cov(3, 5);
    _next_states_cov(7, 8) = states_cov(4, 5);
    _next_states_cov(8, 8) = dt * gyro_bias_noise(2, 0) + states_cov(5, 5);
    _next_states_cov(9, 8) = states_cov(9, 5);
    _next_states_cov(10, 8) = states_cov(10, 5);
    _next_states_cov(11, 8) = states_cov(11, 5);
    _next_states_cov(0, 9) = _tmp116 * states_cov(4, 9) + _tmp124 * states_cov(2, 9) +
                             _tmp136 * states_cov(3, 9) + _tmp142 * states_cov(5, 9) +
                             _tmp147 * states_cov(0, 9) + _tmp71 * states_cov(1, 9);
    _next_states_cov(1, 9) = _tmp157 * states_cov(4, 9) + _tmp158 * states_cov(5, 9) +
                             _tmp159 * states_cov(0, 9) + _tmp160 * states_cov(2, 9) +
                             _tmp161 * states_cov(3, 9) + _tmp162 * states_cov(1, 9);
    _next_states_cov(2, 9) = _tmp172 * states_cov(4, 9) + _tmp174 * states_cov(3, 9) +
                             _tmp175 * states_cov(5, 9) + _tmp176 * states_cov(0, 9) +
                             _tmp177 * states_cov(1, 9) + _tmp178 * states_cov(2, 9);
    _next_states_cov(3, 9) = states_cov(6, 9);
    _next_states_cov(4, 9) = states_cov(7, 9);
    _next_states_cov(5, 9) = states_cov(8, 9);
    _next_states_cov(6, 9) = states_cov(3, 9);
    _next_states_cov(7, 9) = states_cov(4, 9);
    _next_states_cov(8, 9) = states_cov(5, 9);
    _next_states_cov(9, 9) = dt * mag_bias_noise(0, 0) + states_cov(9, 9);
    _next_states_cov(10, 9) = states_cov(10, 9);
    _next_states_cov(11, 9) = states_cov(11, 9);
    _next_states_cov(0, 10) = _tmp116 * states_cov(4, 10) + _tmp124 * states_cov(2, 10) +
                              _tmp136 * states_cov(3, 10) + _tmp142 * states_cov(5, 10) +
                              _tmp147 * states_cov(0, 10) + _tmp71 * states_cov(1, 10);
    _next_states_cov(1, 10) = _tmp157 * states_cov(4, 10) + _tmp158 * states_cov(5, 10) +
                              _tmp159 * states_cov(0, 10) + _tmp160 * states_cov(2, 10) +
                              _tmp161 * states_cov(3, 10) + _tmp162 * states_cov(1, 10);
    _next_states_cov(2, 10) = _tmp172 * states_cov(4, 10) + _tmp174 * states_cov(3, 10) +
                              _tmp175 * states_cov(5, 10) + _tmp176 * states_cov(0, 10) +
                              _tmp177 * states_cov(1, 10) + _tmp178 * states_cov(2, 10);
    _next_states_cov(3, 10) = states_cov(6, 10);
    _next_states_cov(4, 10) = states_cov(7, 10);
    _next_states_cov(5, 10) = states_cov(8, 10);
    _next_states_cov(6, 10) = states_cov(3, 10);
    _next_states_cov(7, 10) = states_cov(4, 10);
    _next_states_cov(8, 10) = states_cov(5, 10);
    _next_states_cov(9, 10) = states_cov(9, 10);
    _next_states_cov(10, 10) = dt * mag_bias_noise(1, 0) + states_cov(10, 10);
    _next_states_cov(11, 10) = states_cov(11, 10);
    _next_states_cov(0, 11) = _tmp116 * states_cov(4, 11) + _tmp124 * states_cov(2, 11) +
                              _tmp136 * states_cov(3, 11) + _tmp142 * states_cov(5, 11) +
                              _tmp147 * states_cov(0, 11) + _tmp71 * states_cov(1, 11);
    _next_states_cov(1, 11) = _tmp157 * states_cov(4, 11) + _tmp158 * states_cov(5, 11) +
                              _tmp159 * states_cov(0, 11) + _tmp160 * states_cov(2, 11) +
                              _tmp161 * states_cov(3, 11) + _tmp162 * states_cov(1, 11);
    _next_states_cov(2, 11) = _tmp172 * states_cov(4, 11) + _tmp174 * states_cov(3, 11) +
                              _tmp175 * states_cov(5, 11) + _tmp176 * states_cov(0, 11) +
                              _tmp177 * states_cov(1, 11) + _tmp178 * states_cov(2, 11);
    _next_states_cov(3, 11) = states_cov(6, 11);
    _next_states_cov(4, 11) = states_cov(7, 11);
    _next_states_cov(5, 11) = states_cov(8, 11);
    _next_states_cov(6, 11) = states_cov(3, 11);
    _next_states_cov(7, 11) = states_cov(4, 11);
    _next_states_cov(8, 11) = states_cov(5, 11);
    _next_states_cov(9, 11) = states_cov(9, 11);
    _next_states_cov(10, 11) = states_cov(10, 11);
    _next_states_cov(11, 11) = dt * mag_bias_noise(2, 0) + states_cov(11, 11);
  }
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
