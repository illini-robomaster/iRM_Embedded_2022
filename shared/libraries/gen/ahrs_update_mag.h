// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     cpp_templates/function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>

namespace sym {

/**
 * This function was autogenerated. Do not modify by hand.
 *
 * Args:
 *     states: Matrix17_1
 *     states_cov: Matrix15_15
 *     mag_body: Matrix31
 *     mag_noise: Matrix31
 *     m: Matrix31
 *
 * Outputs:
 *     innovation: Matrix31
 *     innovation_cov: Matrix33
 *     H: Matrix3_15
 */
template <typename Scalar>
void AhrsUpdateMag(const Eigen::Matrix<Scalar, 17, 1>& states,
                   const Eigen::Matrix<Scalar, 15, 15>& states_cov,
                   const Eigen::Matrix<Scalar, 3, 1>& mag_body,
                   const Eigen::Matrix<Scalar, 3, 1>& mag_noise,
                   const Eigen::Matrix<Scalar, 3, 1>& m,
                   Eigen::Matrix<Scalar, 3, 1>* const innovation = nullptr,
                   Eigen::Matrix<Scalar, 3, 3>* const innovation_cov = nullptr,
                   Eigen::Matrix<Scalar, 3, 15>* const H = nullptr) {
  // Total ops: 910

  // Input arrays

  // Intermediate terms (216)
  const Scalar _tmp0 = states(13, 0) * states(2, 0);
  const Scalar _tmp1 = states(1, 0) * states(16, 0);
  const Scalar _tmp2 = states(0, 0) * states(15, 0);
  const Scalar _tmp3 = states(14, 0) * states(3, 0);
  const Scalar _tmp4 = _tmp0 - _tmp1 - _tmp2 + _tmp3;
  const Scalar _tmp5 = -2 * std::pow(_tmp4, Scalar(2));
  const Scalar _tmp6 = states(1, 0) * states(13, 0);
  const Scalar _tmp7 = states(16, 0) * states(2, 0);
  const Scalar _tmp8 = states(15, 0) * states(3, 0);
  const Scalar _tmp9 = states(0, 0) * states(14, 0);
  const Scalar _tmp10 = -_tmp6 - _tmp7 + _tmp8 + _tmp9;
  const Scalar _tmp11 = 1 - 2 * std::pow(_tmp10, Scalar(2));
  const Scalar _tmp12 = states(13, 0) * states(3, 0);
  const Scalar _tmp13 = states(0, 0) * states(16, 0);
  const Scalar _tmp14 = states(1, 0) * states(15, 0);
  const Scalar _tmp15 = states(14, 0) * states(2, 0);
  const Scalar _tmp16 = _tmp12 - _tmp13 + _tmp14 - _tmp15;
  const Scalar _tmp17 = 2 * _tmp4;
  const Scalar _tmp18 = _tmp16 * _tmp17;
  const Scalar _tmp19 = states(16, 0) * states(3, 0);
  const Scalar _tmp20 = states(0, 0) * states(13, 0);
  const Scalar _tmp21 = states(15, 0) * states(2, 0);
  const Scalar _tmp22 = states(1, 0) * states(14, 0);
  const Scalar _tmp23 = _tmp19 + _tmp20 + _tmp21 + _tmp22;
  const Scalar _tmp24 = 2 * _tmp10;
  const Scalar _tmp25 = _tmp23 * _tmp24;
  const Scalar _tmp26 = _tmp16 * _tmp24;
  const Scalar _tmp27 = _tmp17 * _tmp23;
  const Scalar _tmp28 = -2 * std::pow(_tmp16, Scalar(2));
  const Scalar _tmp29 = _tmp24 * _tmp4;
  const Scalar _tmp30 = 2 * _tmp23;
  const Scalar _tmp31 = _tmp16 * _tmp30;
  const Scalar _tmp32 = (Scalar(1) / Scalar(2)) * _tmp20;
  const Scalar _tmp33 = -_tmp32;
  const Scalar _tmp34 = (Scalar(1) / Scalar(2)) * _tmp19;
  const Scalar _tmp35 = (Scalar(1) / Scalar(2)) * _tmp21;
  const Scalar _tmp36 = -_tmp35;
  const Scalar _tmp37 = (Scalar(1) / Scalar(2)) * _tmp22;
  const Scalar _tmp38 = _tmp33 + _tmp34 + _tmp36 + _tmp37;
  const Scalar _tmp39 = 4 * _tmp4;
  const Scalar _tmp40 = -_tmp38 * _tmp39;
  const Scalar _tmp41 = (Scalar(1) / Scalar(2)) * _tmp12;
  const Scalar _tmp42 = (Scalar(1) / Scalar(2)) * _tmp15;
  const Scalar _tmp43 = _tmp41 + _tmp42;
  const Scalar _tmp44 = (Scalar(1) / Scalar(2)) * _tmp13;
  const Scalar _tmp45 = (Scalar(1) / Scalar(2)) * _tmp14;
  const Scalar _tmp46 = _tmp44 + _tmp45;
  const Scalar _tmp47 = _tmp43 + _tmp46;
  const Scalar _tmp48 = 4 * _tmp10;
  const Scalar _tmp49 = -_tmp47 * _tmp48;
  const Scalar _tmp50 = (Scalar(1) / Scalar(2)) * _tmp0;
  const Scalar _tmp51 = (Scalar(1) / Scalar(2)) * _tmp1;
  const Scalar _tmp52 = (Scalar(1) / Scalar(2)) * _tmp2;
  const Scalar _tmp53 = -_tmp52;
  const Scalar _tmp54 = (Scalar(1) / Scalar(2)) * _tmp3;
  const Scalar _tmp55 = -_tmp54;
  const Scalar _tmp56 = _tmp50 + _tmp51 + _tmp53 + _tmp55;
  const Scalar _tmp57 = _tmp24 * _tmp56;
  const Scalar _tmp58 = _tmp30 * _tmp47;
  const Scalar _tmp59 = (Scalar(1) / Scalar(2)) * _tmp8;
  const Scalar _tmp60 = -_tmp59;
  const Scalar _tmp61 = (Scalar(1) / Scalar(2)) * _tmp9;
  const Scalar _tmp62 = _tmp60 + _tmp61;
  const Scalar _tmp63 = (Scalar(1) / Scalar(2)) * _tmp6;
  const Scalar _tmp64 = (Scalar(1) / Scalar(2)) * _tmp7;
  const Scalar _tmp65 = -_tmp64;
  const Scalar _tmp66 = _tmp63 + _tmp65;
  const Scalar _tmp67 = _tmp62 + _tmp66;
  const Scalar _tmp68 = 2 * _tmp16;
  const Scalar _tmp69 = _tmp17 * _tmp67 + _tmp38 * _tmp68;
  const Scalar _tmp70 = _tmp17 * _tmp56;
  const Scalar _tmp71 = _tmp30 * _tmp38;
  const Scalar _tmp72 = _tmp24 * _tmp67 + _tmp47 * _tmp68;
  const Scalar _tmp73 = m(0, 0) * (_tmp40 + _tmp49) + m(1, 0) * (-_tmp57 - _tmp58 + _tmp69) +
                        m(2, 0) * (_tmp70 + _tmp71 + _tmp72);
  const Scalar _tmp74 = -_tmp34;
  const Scalar _tmp75 = -_tmp37;
  const Scalar _tmp76 = _tmp32 + _tmp35 + _tmp74 + _tmp75;
  const Scalar _tmp77 = -_tmp39 * _tmp76;
  const Scalar _tmp78 = -_tmp44;
  const Scalar _tmp79 = -_tmp45;
  const Scalar _tmp80 = _tmp78 + _tmp79;
  const Scalar _tmp81 = -_tmp42;
  const Scalar _tmp82 = -_tmp41;
  const Scalar _tmp83 = _tmp81 + _tmp82;
  const Scalar _tmp84 = _tmp80 + _tmp83;
  const Scalar _tmp85 = -_tmp48 * _tmp84;
  const Scalar _tmp86 = -_tmp50;
  const Scalar _tmp87 = -_tmp51;
  const Scalar _tmp88 = _tmp52 + _tmp54 + _tmp86 + _tmp87;
  const Scalar _tmp89 = _tmp24 * _tmp88;
  const Scalar _tmp90 = _tmp30 * _tmp84;
  const Scalar _tmp91 = -_tmp63;
  const Scalar _tmp92 = _tmp64 + _tmp91;
  const Scalar _tmp93 = -_tmp61;
  const Scalar _tmp94 = _tmp59 + _tmp93;
  const Scalar _tmp95 = _tmp92 + _tmp94;
  const Scalar _tmp96 = _tmp17 * _tmp95 + _tmp68 * _tmp76;
  const Scalar _tmp97 = _tmp17 * _tmp88;
  const Scalar _tmp98 = _tmp30 * _tmp76;
  const Scalar _tmp99 = _tmp24 * _tmp95 + _tmp68 * _tmp84;
  const Scalar _tmp100 = m(0, 0) * (_tmp77 + _tmp85) + m(1, 0) * (-_tmp89 - _tmp90 + _tmp96) +
                         m(2, 0) * (_tmp97 + _tmp98 + _tmp99);
  const Scalar _tmp101 = _tmp41 + _tmp44 + _tmp79 + _tmp81;
  const Scalar _tmp102 = -_tmp101 * _tmp39;
  const Scalar _tmp103 = _tmp32 + _tmp36;
  const Scalar _tmp104 = _tmp37 + _tmp74;
  const Scalar _tmp105 = _tmp103 + _tmp104;
  const Scalar _tmp106 = -_tmp105 * _tmp48;
  const Scalar _tmp107 = _tmp66 + _tmp94;
  const Scalar _tmp108 = _tmp107 * _tmp17;
  const Scalar _tmp109 = _tmp101 * _tmp30;
  const Scalar _tmp110 = _tmp53 + _tmp86;
  const Scalar _tmp111 = _tmp55 + _tmp87;
  const Scalar _tmp112 = _tmp110 + _tmp111;
  const Scalar _tmp113 = _tmp105 * _tmp68 + _tmp112 * _tmp24;
  const Scalar _tmp114 = _tmp107 * _tmp24;
  const Scalar _tmp115 = _tmp105 * _tmp30;
  const Scalar _tmp116 = _tmp101 * _tmp68 + _tmp112 * _tmp17;
  const Scalar _tmp117 = m(0, 0) * (_tmp102 + _tmp106) + m(1, 0) * (-_tmp114 - _tmp115 + _tmp116) +
                         m(2, 0) * (_tmp108 + _tmp109 + _tmp113);
  const Scalar _tmp118 = _tmp42 + _tmp45 + _tmp78 + _tmp82;
  const Scalar _tmp119 = -_tmp118 * _tmp39;
  const Scalar _tmp120 = _tmp34 + _tmp75;
  const Scalar _tmp121 = _tmp33 + _tmp35;
  const Scalar _tmp122 = _tmp120 + _tmp121;
  const Scalar _tmp123 = -_tmp122 * _tmp48;
  const Scalar _tmp124 = _tmp62 + _tmp92;
  const Scalar _tmp125 = _tmp124 * _tmp17;
  const Scalar _tmp126 = _tmp118 * _tmp30;
  const Scalar _tmp127 = _tmp51 + _tmp54;
  const Scalar _tmp128 = _tmp50 + _tmp52;
  const Scalar _tmp129 = _tmp127 + _tmp128;
  const Scalar _tmp130 = _tmp122 * _tmp68 + _tmp129 * _tmp24;
  const Scalar _tmp131 = _tmp124 * _tmp24;
  const Scalar _tmp132 = _tmp122 * _tmp30;
  const Scalar _tmp133 = _tmp118 * _tmp68 + _tmp129 * _tmp17;
  const Scalar _tmp134 = m(0, 0) * (_tmp119 + _tmp123) + m(1, 0) * (-_tmp131 - _tmp132 + _tmp133) +
                         m(2, 0) * (_tmp125 + _tmp126 + _tmp130);
  const Scalar _tmp135 = _tmp111 + _tmp128;
  const Scalar _tmp136 = -_tmp135 * _tmp48;
  const Scalar _tmp137 = _tmp59 + _tmp61 + _tmp63 + _tmp64;
  const Scalar _tmp138 = -_tmp137 * _tmp39;
  const Scalar _tmp139 = _tmp46 + _tmp83;
  const Scalar _tmp140 = _tmp139 * _tmp24;
  const Scalar _tmp141 = _tmp135 * _tmp30;
  const Scalar _tmp142 = _tmp103 + _tmp120;
  const Scalar _tmp143 = _tmp137 * _tmp68 + _tmp142 * _tmp17;
  const Scalar _tmp144 = _tmp139 * _tmp17;
  const Scalar _tmp145 = _tmp137 * _tmp30;
  const Scalar _tmp146 = _tmp135 * _tmp68 + _tmp142 * _tmp24;
  const Scalar _tmp147 = m(0, 0) * (_tmp136 + _tmp138) + m(1, 0) * (-_tmp140 - _tmp141 + _tmp143) +
                         m(2, 0) * (_tmp144 + _tmp145 + _tmp146);
  const Scalar _tmp148 = _tmp110 + _tmp127;
  const Scalar _tmp149 = -_tmp148 * _tmp48;
  const Scalar _tmp150 = _tmp60 + _tmp65 + _tmp91 + _tmp93;
  const Scalar _tmp151 = -_tmp150 * _tmp39;
  const Scalar _tmp152 = _tmp43 + _tmp80;
  const Scalar _tmp153 = _tmp152 * _tmp24;
  const Scalar _tmp154 = _tmp148 * _tmp30;
  const Scalar _tmp155 = _tmp104 + _tmp121;
  const Scalar _tmp156 = _tmp150 * _tmp68 + _tmp155 * _tmp17;
  const Scalar _tmp157 = _tmp152 * _tmp17;
  const Scalar _tmp158 = _tmp150 * _tmp30;
  const Scalar _tmp159 = _tmp148 * _tmp68 + _tmp155 * _tmp24;
  const Scalar _tmp160 = m(0, 0) * (_tmp149 + _tmp151) + m(1, 0) * (-_tmp153 - _tmp154 + _tmp156) +
                         m(2, 0) * (_tmp157 + _tmp158 + _tmp159);
  const Scalar _tmp161 = _tmp100 * states_cov(1, 13) + _tmp117 * states_cov(2, 13) +
                         _tmp134 * states_cov(14, 13) + _tmp147 * states_cov(12, 13) +
                         _tmp160 * states_cov(0, 13) + _tmp73 * states_cov(13, 13) +
                         states_cov(9, 13);
  const Scalar _tmp162 = _tmp100 * states_cov(1, 12) + _tmp117 * states_cov(2, 12) +
                         _tmp134 * states_cov(14, 12) + _tmp147 * states_cov(12, 12) +
                         _tmp160 * states_cov(0, 12) + _tmp73 * states_cov(13, 12) +
                         states_cov(9, 12);
  const Scalar _tmp163 = _tmp100 * states_cov(1, 0) + _tmp117 * states_cov(2, 0) +
                         _tmp134 * states_cov(14, 0) + _tmp147 * states_cov(12, 0) +
                         _tmp160 * states_cov(0, 0) + _tmp73 * states_cov(13, 0) + states_cov(9, 0);
  const Scalar _tmp164 = _tmp100 * states_cov(1, 14) + _tmp117 * states_cov(2, 14) +
                         _tmp134 * states_cov(14, 14) + _tmp147 * states_cov(12, 14) +
                         _tmp160 * states_cov(0, 14) + _tmp73 * states_cov(13, 14) +
                         states_cov(9, 14);
  const Scalar _tmp165 = _tmp100 * states_cov(1, 1) + _tmp117 * states_cov(2, 1) +
                         _tmp134 * states_cov(14, 1) + _tmp147 * states_cov(12, 1) +
                         _tmp160 * states_cov(0, 1) + _tmp73 * states_cov(13, 1) + states_cov(9, 1);
  const Scalar _tmp166 = _tmp100 * states_cov(1, 2) + _tmp117 * states_cov(2, 2) +
                         _tmp134 * states_cov(14, 2) + _tmp147 * states_cov(12, 2) +
                         _tmp160 * states_cov(0, 2) + _tmp73 * states_cov(13, 2) + states_cov(9, 2);
  const Scalar _tmp167 = _tmp124 * _tmp68;
  const Scalar _tmp168 = _tmp129 * _tmp30;
  const Scalar _tmp169 = _tmp118 * _tmp24 + _tmp122 * _tmp17;
  const Scalar _tmp170 = 4 * _tmp16;
  const Scalar _tmp171 = -_tmp129 * _tmp170;
  const Scalar _tmp172 = m(0, 0) * (_tmp131 + _tmp132 + _tmp133) + m(1, 0) * (_tmp123 + _tmp171) +
                         m(2, 0) * (-_tmp167 - _tmp168 + _tmp169);
  const Scalar _tmp173 = -_tmp142 * _tmp170;
  const Scalar _tmp174 = _tmp139 * _tmp68;
  const Scalar _tmp175 = _tmp142 * _tmp30;
  const Scalar _tmp176 = _tmp135 * _tmp17 + _tmp137 * _tmp24;
  const Scalar _tmp177 = m(0, 0) * (_tmp140 + _tmp141 + _tmp143) + m(1, 0) * (_tmp136 + _tmp173) +
                         m(2, 0) * (-_tmp174 - _tmp175 + _tmp176);
  const Scalar _tmp178 = _tmp107 * _tmp68;
  const Scalar _tmp179 = _tmp112 * _tmp30;
  const Scalar _tmp180 = _tmp101 * _tmp24 + _tmp105 * _tmp17;
  const Scalar _tmp181 = -_tmp112 * _tmp170;
  const Scalar _tmp182 = m(0, 0) * (_tmp114 + _tmp115 + _tmp116) + m(1, 0) * (_tmp106 + _tmp181) +
                         m(2, 0) * (-_tmp178 - _tmp179 + _tmp180);
  const Scalar _tmp183 = _tmp56 * _tmp68;
  const Scalar _tmp184 = _tmp30 * _tmp67;
  const Scalar _tmp185 = _tmp17 * _tmp47 + _tmp24 * _tmp38;
  const Scalar _tmp186 = -_tmp170 * _tmp67;
  const Scalar _tmp187 = m(0, 0) * (_tmp57 + _tmp58 + _tmp69) + m(1, 0) * (_tmp186 + _tmp49) +
                         m(2, 0) * (-_tmp183 - _tmp184 + _tmp185);
  const Scalar _tmp188 = -_tmp170 * _tmp95;
  const Scalar _tmp189 = _tmp68 * _tmp88;
  const Scalar _tmp190 = _tmp30 * _tmp95;
  const Scalar _tmp191 = _tmp17 * _tmp84 + _tmp24 * _tmp76;
  const Scalar _tmp192 = m(0, 0) * (_tmp89 + _tmp90 + _tmp96) + m(1, 0) * (_tmp188 + _tmp85) +
                         m(2, 0) * (-_tmp189 - _tmp190 + _tmp191);
  const Scalar _tmp193 = -_tmp155 * _tmp170;
  const Scalar _tmp194 = _tmp152 * _tmp68;
  const Scalar _tmp195 = _tmp155 * _tmp30;
  const Scalar _tmp196 = _tmp148 * _tmp17 + _tmp150 * _tmp24;
  const Scalar _tmp197 = m(0, 0) * (_tmp153 + _tmp154 + _tmp156) + m(1, 0) * (_tmp149 + _tmp193) +
                         m(2, 0) * (-_tmp194 - _tmp195 + _tmp196);
  const Scalar _tmp198 = _tmp172 * states_cov(14, 14) + _tmp177 * states_cov(12, 14) +
                         _tmp182 * states_cov(2, 14) + _tmp187 * states_cov(13, 14) +
                         _tmp192 * states_cov(1, 14) + _tmp197 * states_cov(0, 14) +
                         states_cov(10, 14);
  const Scalar _tmp199 = _tmp172 * states_cov(14, 1) + _tmp177 * states_cov(12, 1) +
                         _tmp182 * states_cov(2, 1) + _tmp187 * states_cov(13, 1) +
                         _tmp192 * states_cov(1, 1) + _tmp197 * states_cov(0, 1) +
                         states_cov(10, 1);
  const Scalar _tmp200 = _tmp172 * states_cov(14, 0) + _tmp177 * states_cov(12, 0) +
                         _tmp182 * states_cov(2, 0) + _tmp187 * states_cov(13, 0) +
                         _tmp192 * states_cov(1, 0) + _tmp197 * states_cov(0, 0) +
                         states_cov(10, 0);
  const Scalar _tmp201 = _tmp172 * states_cov(14, 12) + _tmp177 * states_cov(12, 12) +
                         _tmp182 * states_cov(2, 12) + _tmp187 * states_cov(13, 12) +
                         _tmp192 * states_cov(1, 12) + _tmp197 * states_cov(0, 12) +
                         states_cov(10, 12);
  const Scalar _tmp202 = _tmp172 * states_cov(14, 13) + _tmp177 * states_cov(12, 13) +
                         _tmp182 * states_cov(2, 13) + _tmp187 * states_cov(13, 13) +
                         _tmp192 * states_cov(1, 13) + _tmp197 * states_cov(0, 13) +
                         states_cov(10, 13);
  const Scalar _tmp203 = _tmp172 * states_cov(14, 2) + _tmp177 * states_cov(12, 2) +
                         _tmp182 * states_cov(2, 2) + _tmp187 * states_cov(13, 2) +
                         _tmp192 * states_cov(1, 2) + _tmp197 * states_cov(0, 2) +
                         states_cov(10, 2);
  const Scalar _tmp204 = m(0, 0) * (-_tmp70 - _tmp71 + _tmp72) +
                         m(1, 0) * (_tmp183 + _tmp184 + _tmp185) + m(2, 0) * (_tmp186 + _tmp40);
  const Scalar _tmp205 = m(0, 0) * (-_tmp125 - _tmp126 + _tmp130) +
                         m(1, 0) * (_tmp167 + _tmp168 + _tmp169) + m(2, 0) * (_tmp119 + _tmp171);
  const Scalar _tmp206 = m(0, 0) * (-_tmp144 - _tmp145 + _tmp146) +
                         m(1, 0) * (_tmp174 + _tmp175 + _tmp176) + m(2, 0) * (_tmp138 + _tmp173);
  const Scalar _tmp207 = m(0, 0) * (-_tmp108 - _tmp109 + _tmp113) +
                         m(1, 0) * (_tmp178 + _tmp179 + _tmp180) + m(2, 0) * (_tmp102 + _tmp181);
  const Scalar _tmp208 = m(0, 0) * (-_tmp97 - _tmp98 + _tmp99) +
                         m(1, 0) * (_tmp189 + _tmp190 + _tmp191) + m(2, 0) * (_tmp188 + _tmp77);
  const Scalar _tmp209 = m(0, 0) * (-_tmp157 - _tmp158 + _tmp159) +
                         m(1, 0) * (_tmp194 + _tmp195 + _tmp196) + m(2, 0) * (_tmp151 + _tmp193);
  const Scalar _tmp210 = _tmp204 * states_cov(13, 1) + _tmp205 * states_cov(14, 1) +
                         _tmp206 * states_cov(12, 1) + _tmp207 * states_cov(2, 1) +
                         _tmp208 * states_cov(1, 1) + _tmp209 * states_cov(0, 1) +
                         states_cov(11, 1);
  const Scalar _tmp211 = _tmp204 * states_cov(13, 12) + _tmp205 * states_cov(14, 12) +
                         _tmp206 * states_cov(12, 12) + _tmp207 * states_cov(2, 12) +
                         _tmp208 * states_cov(1, 12) + _tmp209 * states_cov(0, 12) +
                         states_cov(11, 12);
  const Scalar _tmp212 = _tmp204 * states_cov(13, 13) + _tmp205 * states_cov(14, 13) +
                         _tmp206 * states_cov(12, 13) + _tmp207 * states_cov(2, 13) +
                         _tmp208 * states_cov(1, 13) + _tmp209 * states_cov(0, 13) +
                         states_cov(11, 13);
  const Scalar _tmp213 = _tmp204 * states_cov(13, 14) + _tmp205 * states_cov(14, 14) +
                         _tmp206 * states_cov(12, 14) + _tmp207 * states_cov(2, 14) +
                         _tmp208 * states_cov(1, 14) + _tmp209 * states_cov(0, 14) +
                         states_cov(11, 14);
  const Scalar _tmp214 = _tmp204 * states_cov(13, 0) + _tmp205 * states_cov(14, 0) +
                         _tmp206 * states_cov(12, 0) + _tmp207 * states_cov(2, 0) +
                         _tmp208 * states_cov(1, 0) + _tmp209 * states_cov(0, 0) +
                         states_cov(11, 0);
  const Scalar _tmp215 = _tmp204 * states_cov(13, 2) + _tmp205 * states_cov(14, 2) +
                         _tmp206 * states_cov(12, 2) + _tmp207 * states_cov(2, 2) +
                         _tmp208 * states_cov(1, 2) + _tmp209 * states_cov(0, 2) +
                         states_cov(11, 2);

  // Output terms (3)
  if (innovation != nullptr) {
    Eigen::Matrix<Scalar, 3, 1>& _innovation = (*innovation);

    _innovation(0, 0) = -m(0, 0) * (_tmp11 + _tmp5) - m(1, 0) * (_tmp18 - _tmp25) -
                        m(2, 0) * (_tmp26 + _tmp27) + mag_body(0, 0) - states(10, 0);
    _innovation(1, 0) = -m(0, 0) * (_tmp18 + _tmp25) - m(1, 0) * (_tmp11 + _tmp28) -
                        m(2, 0) * (_tmp29 - _tmp31) + mag_body(1, 0) - states(11, 0);
    _innovation(2, 0) = -m(0, 0) * (_tmp26 - _tmp27) - m(1, 0) * (_tmp29 + _tmp31) -
                        m(2, 0) * (_tmp28 + _tmp5 + 1) + mag_body(2, 0) - states(12, 0);
  }

  if (innovation_cov != nullptr) {
    Eigen::Matrix<Scalar, 3, 3>& _innovation_cov = (*innovation_cov);

    _innovation_cov(0, 0) = _tmp100 * _tmp165 + _tmp100 * states_cov(1, 9) + _tmp117 * _tmp166 +
                            _tmp117 * states_cov(2, 9) + _tmp134 * _tmp164 +
                            _tmp134 * states_cov(14, 9) + _tmp147 * _tmp162 +
                            _tmp147 * states_cov(12, 9) + _tmp160 * _tmp163 +
                            _tmp160 * states_cov(0, 9) + _tmp161 * _tmp73 +
                            _tmp73 * states_cov(13, 9) + mag_noise(0, 0) + states_cov(9, 9);
    _innovation_cov(1, 0) = _tmp100 * _tmp199 + _tmp117 * _tmp203 + _tmp134 * _tmp198 +
                            _tmp147 * _tmp201 + _tmp160 * _tmp200 + _tmp172 * states_cov(14, 9) +
                            _tmp177 * states_cov(12, 9) + _tmp182 * states_cov(2, 9) +
                            _tmp187 * states_cov(13, 9) + _tmp192 * states_cov(1, 9) +
                            _tmp197 * states_cov(0, 9) + _tmp202 * _tmp73 + states_cov(10, 9);
    _innovation_cov(2, 0) = _tmp100 * _tmp210 + _tmp117 * _tmp215 + _tmp134 * _tmp213 +
                            _tmp147 * _tmp211 + _tmp160 * _tmp214 + _tmp204 * states_cov(13, 9) +
                            _tmp205 * states_cov(14, 9) + _tmp206 * states_cov(12, 9) +
                            _tmp207 * states_cov(2, 9) + _tmp208 * states_cov(1, 9) +
                            _tmp209 * states_cov(0, 9) + _tmp212 * _tmp73 + states_cov(11, 9);
    _innovation_cov(0, 1) = _tmp100 * states_cov(1, 10) + _tmp117 * states_cov(2, 10) +
                            _tmp134 * states_cov(14, 10) + _tmp147 * states_cov(12, 10) +
                            _tmp160 * states_cov(0, 10) + _tmp161 * _tmp187 + _tmp162 * _tmp177 +
                            _tmp163 * _tmp197 + _tmp164 * _tmp172 + _tmp165 * _tmp192 +
                            _tmp166 * _tmp182 + _tmp73 * states_cov(13, 10) + states_cov(9, 10);
    _innovation_cov(1, 1) = _tmp172 * _tmp198 + _tmp172 * states_cov(14, 10) + _tmp177 * _tmp201 +
                            _tmp177 * states_cov(12, 10) + _tmp182 * _tmp203 +
                            _tmp182 * states_cov(2, 10) + _tmp187 * _tmp202 +
                            _tmp187 * states_cov(13, 10) + _tmp192 * _tmp199 +
                            _tmp192 * states_cov(1, 10) + _tmp197 * _tmp200 +
                            _tmp197 * states_cov(0, 10) + mag_noise(1, 0) + states_cov(10, 10);
    _innovation_cov(2, 1) =
        _tmp172 * _tmp213 + _tmp177 * _tmp211 + _tmp182 * _tmp215 + _tmp187 * _tmp212 +
        _tmp192 * _tmp210 + _tmp197 * _tmp214 + _tmp204 * states_cov(13, 10) +
        _tmp205 * states_cov(14, 10) + _tmp206 * states_cov(12, 10) + _tmp207 * states_cov(2, 10) +
        _tmp208 * states_cov(1, 10) + _tmp209 * states_cov(0, 10) + states_cov(11, 10);
    _innovation_cov(0, 2) = _tmp100 * states_cov(1, 11) + _tmp117 * states_cov(2, 11) +
                            _tmp134 * states_cov(14, 11) + _tmp147 * states_cov(12, 11) +
                            _tmp160 * states_cov(0, 11) + _tmp161 * _tmp204 + _tmp162 * _tmp206 +
                            _tmp163 * _tmp209 + _tmp164 * _tmp205 + _tmp165 * _tmp208 +
                            _tmp166 * _tmp207 + _tmp73 * states_cov(13, 11) + states_cov(9, 11);
    _innovation_cov(1, 2) =
        _tmp172 * states_cov(14, 11) + _tmp177 * states_cov(12, 11) + _tmp182 * states_cov(2, 11) +
        _tmp187 * states_cov(13, 11) + _tmp192 * states_cov(1, 11) + _tmp197 * states_cov(0, 11) +
        _tmp198 * _tmp205 + _tmp199 * _tmp208 + _tmp200 * _tmp209 + _tmp201 * _tmp206 +
        _tmp202 * _tmp204 + _tmp203 * _tmp207 + states_cov(10, 11);
    _innovation_cov(2, 2) = _tmp204 * _tmp212 + _tmp204 * states_cov(13, 11) + _tmp205 * _tmp213 +
                            _tmp205 * states_cov(14, 11) + _tmp206 * _tmp211 +
                            _tmp206 * states_cov(12, 11) + _tmp207 * _tmp215 +
                            _tmp207 * states_cov(2, 11) + _tmp208 * _tmp210 +
                            _tmp208 * states_cov(1, 11) + _tmp209 * _tmp214 +
                            _tmp209 * states_cov(0, 11) + mag_noise(2, 0) + states_cov(11, 11);
  }

  if (H != nullptr) {
    Eigen::Matrix<Scalar, 3, 15>& _H = (*H);

    _H.setZero();

    _H(0, 0) = _tmp160;
    _H(1, 0) = _tmp197;
    _H(2, 0) = _tmp209;
    _H(0, 1) = _tmp100;
    _H(1, 1) = _tmp192;
    _H(2, 1) = _tmp208;
    _H(0, 2) = _tmp117;
    _H(1, 2) = _tmp182;
    _H(2, 2) = _tmp207;
    _H(0, 9) = 1;
    _H(1, 10) = 1;
    _H(2, 11) = 1;
    _H(0, 12) = _tmp147;
    _H(1, 12) = _tmp177;
    _H(2, 12) = _tmp206;
    _H(0, 13) = _tmp73;
    _H(1, 13) = _tmp187;
    _H(2, 13) = _tmp204;
    _H(0, 14) = _tmp134;
    _H(1, 14) = _tmp172;
    _H(2, 14) = _tmp205;
  }
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
